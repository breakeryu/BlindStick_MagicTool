C51 COMPILER V9.01   GPIO                                                                  04/22/2023 17:21:22 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN .\output\gpio.obj
COMPILER INVOKED BY: E:\Keil_v4\C51\BIN\C51.EXE Mid_Driver\src\gpio.c BROWSE INCDIR(.\App;.\Mid_Driver;.\Mid_Driver\inc)
                    - DEBUG OBJECTEXTEND PRINT(.\listing\gpio.lst) OBJECT(.\output\gpio.obj)

line level    source

   1          /*****************************************************************************/
   2          /** 
   3           * \file        gpio.c
   4           * \author      Jiabin Hsu  | zsiothsu(at)zhishan-iot.tk
   5           * \author      Weilun Fong | wlf@zhishan-iot.tk
   6           * \author      Xiaoyu Ren
   7           * \brief       operations for GPIO module
   8           * \note        
   9           * \version     v0.1
  10           * \ingroup     GPIO
  11          ******************************************************************************/
  12          
  13          #include "gpio.h"
  14          
  15          
  16          #ifdef COMPILE_GPIO
  17          
  18          /*****************************************************************************/
  19          /** 
  20           * \author      Weilun Fong
  21           * \author      Xiaoyu Ren
  22           * \date        
  23           * \brief       configure state of target GPIO Mode 
  24           * \param[in]   gpio: target GPIO port
  25           * \param[in]   pin : target GPIO pin
  26           * \param[in]   mode   : expected mode
  27           * \return      none
  28           * \ingroup     GPIO
  29           * \remarks     
  30          ******************************************************************************/
  31          void GPIO_configMode(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin, PERIPH_GPIO_PIN_MODE mode)
  32          {
  33   1          
  34   1      
  35   1          switch (gpio)
  36   1          {
  37   2              case PERIPH_GPIO_0: 
  38   2                  switch (mode)
  39   2                  {
  40   3                      case PERIPH_GPIO_PIN_MODE_GENERAL_IN_OUT:
  41   3                          CLR_BIT_MASK(P0M0, pin); CLR_BIT_MASK(P0M1, pin);
  42   3                          break;
  43   3                      case PERIPH_GPIO_PIN_MODE_PUSH_PULL_OUTPUT:
  44   3                          SET_BIT_MASK(P0M0, pin); CLR_BIT_MASK(P0M1, pin);
  45   3                          break;
  46   3                      case PERIPH_GPIO_PIN_MODE_HIGH_Z_INPUT:
  47   3                          CLR_BIT_MASK(P0M0, pin); SET_BIT_MASK(P0M1, pin);
  48   3                          break;
  49   3                      case PERIPH_GPIO_PIN_MODE_OPEN_DRAIN_OUTPUT:
  50   3                          SET_BIT_MASK(P0M0, pin); SET_BIT_MASK(P0M1, pin);
  51   3                          break;
  52   3                      default:
  53   3                          break;
  54   3                  }
C51 COMPILER V9.01   GPIO                                                                  04/22/2023 17:21:22 PAGE 2   

  55   2                  break;
  56   2              case PERIPH_GPIO_1: 
  57   2                  switch (mode)
  58   2                  {
  59   3                      case PERIPH_GPIO_PIN_MODE_GENERAL_IN_OUT:
  60   3                          CLR_BIT_MASK(P1M0, pin); CLR_BIT_MASK(P1M1, pin);
  61   3                          break;
  62   3                      case PERIPH_GPIO_PIN_MODE_PUSH_PULL_OUTPUT:
  63   3                          SET_BIT_MASK(P1M0, pin); CLR_BIT_MASK(P1M1, pin);
  64   3                          break;
  65   3                      case PERIPH_GPIO_PIN_MODE_HIGH_Z_INPUT:
  66   3                          CLR_BIT_MASK(P1M0, pin); SET_BIT_MASK(P1M1, pin);
  67   3                          break;
  68   3                      case PERIPH_GPIO_PIN_MODE_OPEN_DRAIN_OUTPUT:
  69   3                          SET_BIT_MASK(P1M0, pin); SET_BIT_MASK(P1M1, pin);
  70   3                          break;
  71   3                      default:
  72   3                          break;
  73   3                  }
  74   2                  break;
  75   2              case PERIPH_GPIO_2: 
  76   2                  switch (mode)
  77   2                  {
  78   3                      case PERIPH_GPIO_PIN_MODE_GENERAL_IN_OUT:
  79   3                          CLR_BIT_MASK(P2M0, pin); CLR_BIT_MASK(P2M1, pin);
  80   3                          break;
  81   3                      case PERIPH_GPIO_PIN_MODE_PUSH_PULL_OUTPUT:
  82   3                          SET_BIT_MASK(P2M0, pin); CLR_BIT_MASK(P2M1, pin);
  83   3                          break;
  84   3                      case PERIPH_GPIO_PIN_MODE_HIGH_Z_INPUT:
  85   3                          CLR_BIT_MASK(P2M0, pin); SET_BIT_MASK(P2M1, pin);
  86   3                          break;
  87   3                      case PERIPH_GPIO_PIN_MODE_OPEN_DRAIN_OUTPUT:
  88   3                          SET_BIT_MASK(P2M0, pin); SET_BIT_MASK(P2M1, pin);
  89   3                          break;
  90   3                      default:
  91   3                          break;
  92   3                  }
  93   2                  break;
  94   2              case PERIPH_GPIO_3: 
  95   2                  switch (mode)
  96   2                  {
  97   3                      case PERIPH_GPIO_PIN_MODE_GENERAL_IN_OUT:
  98   3                          CLR_BIT_MASK(P3M0, pin); CLR_BIT_MASK(P3M1, pin);
  99   3                          break;
 100   3                      case PERIPH_GPIO_PIN_MODE_PUSH_PULL_OUTPUT:
 101   3                          SET_BIT_MASK(P3M0, pin); CLR_BIT_MASK(P3M1, pin);
 102   3                          break;
 103   3                      case PERIPH_GPIO_PIN_MODE_HIGH_Z_INPUT:
 104   3                          CLR_BIT_MASK(P3M0, pin); SET_BIT_MASK(P3M1, pin);
 105   3                          break;
 106   3                      case PERIPH_GPIO_PIN_MODE_OPEN_DRAIN_OUTPUT:
 107   3                          SET_BIT_MASK(P3M0, pin); SET_BIT_MASK(P3M1, pin);
 108   3                          break;
 109   3                      default:
 110   3                          break;
 111   3                  }
 112   2                  break;
 113   2              case PERIPH_GPIO_4: 
 114   2                  switch (mode)
 115   2                  {
 116   3                      case PERIPH_GPIO_PIN_MODE_GENERAL_IN_OUT:
C51 COMPILER V9.01   GPIO                                                                  04/22/2023 17:21:22 PAGE 3   

 117   3                          CLR_BIT_MASK(P4M1, pin); CLR_BIT_MASK(P4M0, pin); 
 118   3                          break;
 119   3                      case PERIPH_GPIO_PIN_MODE_PUSH_PULL_OUTPUT:
 120   3                          SET_BIT_MASK(P4M0, pin); CLR_BIT_MASK(P4M1, pin);
 121   3                          break;
 122   3                      case PERIPH_GPIO_PIN_MODE_HIGH_Z_INPUT:
 123   3                          CLR_BIT_MASK(P4M0, pin); SET_BIT_MASK(P4M1, pin);
 124   3                          break;
 125   3                      case PERIPH_GPIO_PIN_MODE_OPEN_DRAIN_OUTPUT:
 126   3                          SET_BIT_MASK(P4M0, pin); SET_BIT_MASK(P4M1, pin);
 127   3                          break;
 128   3                      default:
 129   3                          break;
 130   3                  }
 131   2                  break;
 132   2              case PERIPH_GPIO_5: 
 133   2                  switch (mode)
 134   2                  {
 135   3                      case PERIPH_GPIO_PIN_MODE_GENERAL_IN_OUT:
 136   3                          CLR_BIT_MASK(P5M0, pin); CLR_BIT_MASK(P5M1, pin);
 137   3                          break;
 138   3                      case PERIPH_GPIO_PIN_MODE_PUSH_PULL_OUTPUT:
 139   3                          SET_BIT_MASK(P5M0, pin); CLR_BIT_MASK(P5M1, pin);
 140   3                          break;
 141   3                      case PERIPH_GPIO_PIN_MODE_HIGH_Z_INPUT:
 142   3                          CLR_BIT_MASK(P5M0, pin); SET_BIT_MASK(P5M1, pin);
 143   3                          break;
 144   3                      case PERIPH_GPIO_PIN_MODE_OPEN_DRAIN_OUTPUT:
 145   3                          SET_BIT_MASK(P5M0, pin); SET_BIT_MASK(P5M1, pin);
 146   3                          break;
 147   3                      default:
 148   3                          break;
 149   3                  }
 150   2                  break;
 151   2              case PERIPH_GPIO_6: 
 152   2                  switch (mode)
 153   2                  {
 154   3                      case PERIPH_GPIO_PIN_MODE_GENERAL_IN_OUT:
 155   3                          CLR_BIT_MASK(P6M0, pin); CLR_BIT_MASK(P6M1, pin);
 156   3                          break;
 157   3                      case PERIPH_GPIO_PIN_MODE_PUSH_PULL_OUTPUT:
 158   3                          SET_BIT_MASK(P6M0, pin); CLR_BIT_MASK(P6M1, pin);
 159   3                          break;
 160   3                      case PERIPH_GPIO_PIN_MODE_HIGH_Z_INPUT:
 161   3                          CLR_BIT_MASK(P6M0, pin); SET_BIT_MASK(P6M1, pin);
 162   3                          break;
 163   3                      case PERIPH_GPIO_PIN_MODE_OPEN_DRAIN_OUTPUT:
 164   3                          SET_BIT_MASK(P6M0, pin); SET_BIT_MASK(P6M1, pin);
 165   3                          break;
 166   3                      default:
 167   3                          break;
 168   3                  }
 169   2                  break;
 170   2              case PERIPH_GPIO_7: 
 171   2                  switch (mode)
 172   2                      {
 173   3                          case PERIPH_GPIO_PIN_MODE_GENERAL_IN_OUT:
 174   3                              CLR_BIT_MASK(P7M0, pin); CLR_BIT_MASK(P7M1, pin);
 175   3                              break;
 176   3                          case PERIPH_GPIO_PIN_MODE_PUSH_PULL_OUTPUT:
 177   3                              SET_BIT_MASK(P7M0, pin); CLR_BIT_MASK(P7M1, pin);
 178   3                              break;
C51 COMPILER V9.01   GPIO                                                                  04/22/2023 17:21:22 PAGE 4   

 179   3                          case PERIPH_GPIO_PIN_MODE_HIGH_Z_INPUT:
 180   3                              CLR_BIT_MASK(P7M0, pin); SET_BIT_MASK(P7M1, pin);
 181   3                              break;
 182   3                          case PERIPH_GPIO_PIN_MODE_OPEN_DRAIN_OUTPUT:
 183   3                              SET_BIT_MASK(P7M0, pin); SET_BIT_MASK(P7M1, pin);
 184   3                              break;
 185   3                          default:
 186   3                              break;
 187   3                      }
 188   2                  break;
 189   2              default: break;
 190   2          }
 191   1      }
 192          
 193          /*****************************************************************************/
 194          /** 
 195           * \author      Xiaoyu Ren
 196           * \date        
 197           * \brief       configure state of target GPIO High Current as SET or RESET
 198           * \param[in]   gpio: target GPIO port
 199           * \param[in]   pin : target GPIO pin
 200           * \param[in]   f   : expected state
 201           * \return      none
 202           * \ingroup     GPIO
 203           * \remarks     
 204          ******************************************************************************/
 205          void GPIO_configHighCurrent(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin, FunctionalState f)
 206          {
 207   1          if (f == RESET)
 208   1          {
 209   2              GPIO_setGeneralCurrent(gpio, pin);
 210   2          }
 211   1          else
 212   1          {
 213   2              GPIO_setHighCurrent(gpio, pin);
 214   2          }
 215   1      }
 216          
 217          
 218          /*****************************************************************************/
 219          /** 
 220           * \author      Xiaoyu Ren
 221           * \date        
 222           * \brief       set target GPIO Pin General Current
 223           * \param[in]   gpio: target GPIO port
 224           * \param[in]   pin : target GPIO pin
 225           * \return      none
 226           * \ingroup     GPIO
 227           * \remarks     
 228          ******************************************************************************/
 229          void GPIO_setGeneralCurrent(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 230          {
 231   1          switch (gpio)
 232   1          {
 233   2              case PERIPH_GPIO_0: SET_BIT_MASK(P0DR, pin); break;
 234   2              case PERIPH_GPIO_1: SET_BIT_MASK(P1DR, pin); break;
 235   2              case PERIPH_GPIO_2: SET_BIT_MASK(P2DR, pin); break;
 236   2              case PERIPH_GPIO_3: SET_BIT_MASK(P3DR, pin); break;
 237   2              case PERIPH_GPIO_4: SET_BIT_MASK(P4DR, pin); break;
 238   2              case PERIPH_GPIO_5: SET_BIT_MASK(P5DR, pin); break;
 239   2              case PERIPH_GPIO_6: SET_BIT_MASK(P6DR, pin); break;
 240   2              case PERIPH_GPIO_7: SET_BIT_MASK(P7DR, pin); break;
C51 COMPILER V9.01   GPIO                                                                  04/22/2023 17:21:22 PAGE 5   

 241   2              default: break;
 242   2          }
 243   1      }
 244          
 245          /*****************************************************************************/
 246          /** 
 247           * \author      Xiaoyu Ren
 248           * \date        
 249           * \brief       set target GPIO Pin High Current
 250           * \param[in]   gpio: target GPIO port
 251           * \param[in]   pin : target GPIO pin
 252           * \return      none
 253           * \ingroup     GPIO
 254           * \remarks     
 255          ******************************************************************************/
 256          void GPIO_setHighCurrent(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 257          {
 258   1          switch (gpio)
 259   1          {
 260   2              case PERIPH_GPIO_0: CLR_BIT_MASK(P0DR, pin); break;
 261   2              case PERIPH_GPIO_1: CLR_BIT_MASK(P1DR, pin); break;
 262   2              case PERIPH_GPIO_2: CLR_BIT_MASK(P2DR, pin); break;
 263   2              case PERIPH_GPIO_3: CLR_BIT_MASK(P3DR, pin); break;
 264   2              case PERIPH_GPIO_4: CLR_BIT_MASK(P4DR, pin); break;
 265   2              case PERIPH_GPIO_5: CLR_BIT_MASK(P5DR, pin); break;
 266   2              case PERIPH_GPIO_6: CLR_BIT_MASK(P6DR, pin); break;
 267   2              case PERIPH_GPIO_7: CLR_BIT_MASK(P7DR, pin); break;
 268   2              default: break;
 269   2          }
 270   1      }
 271          
 272          
 273          
 274          /*****************************************************************************/
 275          /** 
 276           * \author      Xiaoyu Ren
 277           * \date        
 278           * \brief       configure state of target GPIO High Speed as SET or RESET
 279           * \param[in]   gpio: target GPIO port
 280           * \param[in]   pin : target GPIO pin
 281           * \param[in]   f   : expected state
 282           * \return      none
 283           * \ingroup     GPIO
 284           * \remarks     
 285          ******************************************************************************/
 286          void GPIO_configHighSpeed(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin, FunctionalState f)
 287          {
 288   1          if (f == RESET)
 289   1          {
 290   2              GPIO_setGeneralSpeed(gpio, pin);
 291   2          }
 292   1          else
 293   1          {
 294   2              GPIO_setHighSpeed(gpio, pin);
 295   2          }
 296   1      }
 297          
 298          
 299          /*****************************************************************************/
 300          /** 
 301           * \author      Xiaoyu Ren
 302           * \date        
C51 COMPILER V9.01   GPIO                                                                  04/22/2023 17:21:22 PAGE 6   

 303           * \brief       set target GPIO Pin General Speed
 304           * \param[in]   gpio: target GPIO port
 305           * \param[in]   pin : target GPIO pin
 306           * \return      none
 307           * \ingroup     GPIO
 308           * \remarks     
 309          ******************************************************************************/
 310          void GPIO_setGeneralSpeed(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 311          {
 312   1          switch (gpio)
 313   1          {
 314   2              case PERIPH_GPIO_0: SET_BIT_MASK(P0SR, pin); break;
 315   2              case PERIPH_GPIO_1: SET_BIT_MASK(P1SR, pin); break;
 316   2              case PERIPH_GPIO_2: SET_BIT_MASK(P2SR, pin); break;
 317   2              case PERIPH_GPIO_3: SET_BIT_MASK(P3SR, pin); break;
 318   2              case PERIPH_GPIO_4: SET_BIT_MASK(P4SR, pin); break;
 319   2              case PERIPH_GPIO_5: SET_BIT_MASK(P5SR, pin); break;
 320   2              case PERIPH_GPIO_6: SET_BIT_MASK(P6SR, pin); break;
 321   2              case PERIPH_GPIO_7: SET_BIT_MASK(P7SR, pin); break;
 322   2              default: break;
 323   2          }
 324   1      }
 325          
 326          /*****************************************************************************/
 327          /** 
 328           * \author      Xiaoyu Ren
 329           * \date        
 330           * \brief       set target GPIO Pin High Speed
 331           * \param[in]   gpio: target GPIO port
 332           * \param[in]   pin : target GPIO pin
 333           * \return      none
 334           * \ingroup     GPIO
 335           * \remarks     
 336          ******************************************************************************/
 337          void GPIO_setHighSpeed(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 338          {
 339   1          switch (gpio)
 340   1          {
 341   2              case PERIPH_GPIO_0: CLR_BIT_MASK(P0SR, pin); break;
 342   2              case PERIPH_GPIO_1: CLR_BIT_MASK(P1SR, pin); break;
 343   2              case PERIPH_GPIO_2: CLR_BIT_MASK(P2SR, pin); break;
 344   2              case PERIPH_GPIO_3: CLR_BIT_MASK(P3SR, pin); break;
 345   2              case PERIPH_GPIO_4: CLR_BIT_MASK(P4SR, pin); break;
 346   2              case PERIPH_GPIO_5: CLR_BIT_MASK(P5SR, pin); break;
 347   2              case PERIPH_GPIO_6: CLR_BIT_MASK(P6SR, pin); break;
 348   2              case PERIPH_GPIO_7: CLR_BIT_MASK(P7SR, pin); break;
 349   2              default: break;
 350   2          }
 351   1      }
 352          
 353          
 354          
 355          /*****************************************************************************/
 356          /** 
 357           * \author      Xiaoyu Ren
 358           * \date        
 359           * \brief       configure state of target GPIO Pull Up as SET or RESET
 360           * \param[in]   gpio: target GPIO port
 361           * \param[in]   pin : target GPIO pin
 362           * \param[in]   f   : expected state
 363           * \return      none
 364           * \ingroup     GPIO
C51 COMPILER V9.01   GPIO                                                                  04/22/2023 17:21:22 PAGE 7   

 365           * \remarks     
 366          ******************************************************************************/
 367          void GPIO_configPullUP(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin, FunctionalState f)
 368          {
 369   1          if (f == RESET)
 370   1          {
 371   2              GPIO_resetPullUp(gpio, pin);
 372   2          }
 373   1          else
 374   1          {
 375   2              GPIO_setPullUp(gpio, pin);
 376   2          }
 377   1      }
 378          
 379          
 380          
 381          /*****************************************************************************/
 382          /** 
 383           * \author      Xiaoyu Ren
 384           * \date        
 385           * \brief       reset target GPIO Pin Pull Up 
 386           * \param[in]   gpio: target GPIO port
 387           * \param[in]   pin : target GPIO pin
 388           * \return      none
 389           * \ingroup     GPIO
 390           * \remarks     
 391          ******************************************************************************/
 392          void GPIO_resetPullUp(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 393          {
 394   1          switch (gpio)
 395   1          {
 396   2              case PERIPH_GPIO_0: CLR_BIT_MASK(P0PU, pin); break;
 397   2              case PERIPH_GPIO_1: CLR_BIT_MASK(P1PU, pin); break;
 398   2              case PERIPH_GPIO_2: CLR_BIT_MASK(P2PU, pin); break;
 399   2              case PERIPH_GPIO_3: CLR_BIT_MASK(P3PU, pin); break;
 400   2              case PERIPH_GPIO_4: CLR_BIT_MASK(P4PU, pin); break;
 401   2              case PERIPH_GPIO_5: CLR_BIT_MASK(P5PU, pin); break;
 402   2              case PERIPH_GPIO_6: CLR_BIT_MASK(P6PU, pin); break;
 403   2              case PERIPH_GPIO_7: CLR_BIT_MASK(P7PU, pin); break;
 404   2              default: break;
 405   2          }
 406   1      }
 407          
 408          /*****************************************************************************/
 409          /** 
 410           * \author      Xiaoyu Ren
 411           * \date        
 412           * \brief       set target GPIO Pin Pull Up 
 413           * \param[in]   gpio: target GPIO port
 414           * \param[in]   pin : target GPIO pin
 415           * \return      none
 416           * \ingroup     GPIO
 417           * \remarks     
 418          ******************************************************************************/
 419          void GPIO_setPullUp(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 420          {
 421   1          switch (gpio)
 422   1          {
 423   2              case PERIPH_GPIO_0: SET_BIT_MASK(P0PU, pin); break;
 424   2              case PERIPH_GPIO_1: SET_BIT_MASK(P1PU, pin); break;
 425   2              case PERIPH_GPIO_2: SET_BIT_MASK(P2PU, pin); break;
 426   2              case PERIPH_GPIO_3: SET_BIT_MASK(P3PU, pin); break;
C51 COMPILER V9.01   GPIO                                                                  04/22/2023 17:21:22 PAGE 8   

 427   2              case PERIPH_GPIO_4: SET_BIT_MASK(P4PU, pin); break;
 428   2              case PERIPH_GPIO_5: SET_BIT_MASK(P5PU, pin); break;
 429   2              case PERIPH_GPIO_6: SET_BIT_MASK(P6PU, pin); break;
 430   2              case PERIPH_GPIO_7: SET_BIT_MASK(P7PU, pin); break;
 431   2              default: break;
 432   2          }
 433   1      }
 434          
 435          
 436          
 437          /*****************************************************************************/
 438          /** 
 439           * \author      Weilun Fong
 440           * \author      Xiaoyu Ren
 441           * \date        2023/04/02
 442           * \brief       configure state of target GPIO bit as SET or RESET
 443           * \param[in]   gpio: target GPIO port
 444           * \param[in]   pin : target GPIO pin
 445           * \param[in]   f   : expected state
 446           * \return      none
 447           * \ingroup     GPIO
 448           * \remarks     
 449          ******************************************************************************/
 450          void GPIO_configBitValue(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin, FunctionalState f)
 451          {
 452   1          if (f == RESET)
 453   1          {
 454   2              GPIO_resetBitValue(gpio, pin);
 455   2          }
 456   1          else
 457   1          {
 458   2              GPIO_setBitValue(gpio, pin);
 459   2          }
 460   1      }
 461          
 462          /*****************************************************************************/
 463          /** 
 464           * \author      Weilun Fong
 465           * \author      Xiaoyu Ren
 466           * \date        2023/04/02
 467           * \brief       reset target GPIO pin
 468           * \param[in]   gpio: target GPIO port
 469           * \param[in]   pin : target GPIO pin
 470           * \return      none
 471           * \ingroup     GPIO
 472           * \remarks     
 473          ******************************************************************************/
 474          void GPIO_resetBitValue(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 475          {
 476   1          switch (gpio)
 477   1          {
 478   2              case PERIPH_GPIO_0: CLR_BIT_MASK(P0, pin); break;
 479   2              case PERIPH_GPIO_1: CLR_BIT_MASK(P1, pin); break;
 480   2              case PERIPH_GPIO_2: CLR_BIT_MASK(P2, pin); break;
 481   2              case PERIPH_GPIO_3: CLR_BIT_MASK(P3, pin); break;
 482   2              case PERIPH_GPIO_4: CLR_BIT_MASK(P4, pin); break;
 483   2              case PERIPH_GPIO_5: CLR_BIT_MASK(P5, pin); break;
 484   2              case PERIPH_GPIO_6: CLR_BIT_MASK(P6, pin); break;
 485   2              case PERIPH_GPIO_7: CLR_BIT_MASK(P7, pin); break;
 486   2              default: break;
 487   2          }
 488   1      }
C51 COMPILER V9.01   GPIO                                                                  04/22/2023 17:21:22 PAGE 9   

 489          
 490          /*****************************************************************************/
 491          /** 
 492           * \author      Weilun Fong
 493           * \author      Xiaoyu Ren
 494           * \date        2023/04/02
 495           * \brief       set target GPIO pin
 496           * \param[in]   gpio: target GPIO port
 497           * \param[in]   pin : target GPIO pin
 498           * \return      none
 499           * \ingroup     GPIO
 500           * \remarks     
 501          ******************************************************************************/
 502          void GPIO_setBitValue(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 503          {
 504   1          switch (gpio)
 505   1          {
 506   2              case PERIPH_GPIO_0: SET_BIT_MASK(P0, pin); break;
 507   2              case PERIPH_GPIO_1: SET_BIT_MASK(P1, pin); break;
 508   2              case PERIPH_GPIO_2: SET_BIT_MASK(P2, pin); break;
 509   2              case PERIPH_GPIO_3: SET_BIT_MASK(P3, pin); break;
 510   2              case PERIPH_GPIO_4: SET_BIT_MASK(P4, pin); break;
 511   2              case PERIPH_GPIO_5: SET_BIT_MASK(P5, pin); break;
 512   2              case PERIPH_GPIO_6: SET_BIT_MASK(P6, pin); break;
 513   2              case PERIPH_GPIO_7: SET_BIT_MASK(P7, pin); break;
 514   2              default: break;
 515   2          }
 516   1      }
 517          
 518          
 519          /*****************************************************************************/
 520          /** 
 521           * \author      Weilun Fong
 522           * \author      Xiaoyu Ren
 523           * \date        2023/04/02
 524           * \brief       toggle state of target GPIO pin
 525           * \param[in]   gpio: target GPIO port
 526           * \param[in]   pin : target GPIO pin
 527           * \return      none
 528           * \ingroup     GPIO
 529           * \remarks     
 530          ******************************************************************************/
 531          void GPIO_toggleBitValue(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 532          {
 533   1          switch (gpio)
 534   1          {
 535   2              case PERIPH_GPIO_0: NOT_BIT_MASK(P0, pin); break;
 536   2              case PERIPH_GPIO_1: NOT_BIT_MASK(P1, pin); break;
 537   2              case PERIPH_GPIO_2: NOT_BIT_MASK(P2, pin); break;
 538   2              case PERIPH_GPIO_3: NOT_BIT_MASK(P3, pin); break;
 539   2              case PERIPH_GPIO_4: NOT_BIT_MASK(P4, pin); break;
 540   2              case PERIPH_GPIO_5: NOT_BIT_MASK(P5, pin); break;
 541   2              case PERIPH_GPIO_6: NOT_BIT_MASK(P6, pin); break;
 542   2              case PERIPH_GPIO_7: NOT_BIT_MASK(P7, pin); break;       
 543   2              default: break;
 544   2          }
 545   1      }
 546          
 547          
 548          /*****************************************************************************/
 549          /** 
 550           * \author      Weilun Fong
C51 COMPILER V9.01   GPIO                                                                  04/22/2023 17:21:22 PAGE 10  

 551           * \author      Xiaoyu Ren
 552           * \date        2023/04/02
 553           * \brief       get state of target GPIO pin
 554           * \param[in]   gpio: target GPIO port
 555           * \param[in]   pin : target GPIO pin
 556           * \return      SET or RESET
 557           * \ingroup     GPIO
 558           * \remarks     
 559          ******************************************************************************/
 560          FunctionalState GPIO_getBitValue(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 561          {
 562   1          switch (gpio)
 563   1          {
 564   2              case PERIPH_GPIO_0: return GET_BIT(P0, pin);
 565   2              case PERIPH_GPIO_1: return GET_BIT(P1, pin);
 566   2              case PERIPH_GPIO_2: return GET_BIT(P2, pin);
 567   2              case PERIPH_GPIO_3: return GET_BIT(P3, pin);
 568   2              case PERIPH_GPIO_4: return GET_BIT(P4, pin);
 569   2              case PERIPH_GPIO_5: return GET_BIT(P5, pin);
 570   2              case PERIPH_GPIO_6: return GET_BIT(P6, pin);
 571   2              case PERIPH_GPIO_7: return GET_BIT(P7, pin);
 572   2              default: return RESET;
 573   2          }
 574   1      }
 575          
 576          /*****************************************************************************/
 577          /** 
 578           * \author      Weilun Fong
 579           * \author      Xiaoyu Ren
 580           * \date        2023/04/02
 581           * \brief       get value of target GPIO port
 582           * \param[in]   gpio: target GPIO port
 583           * \return      current value of target GPIO port
 584           * \ingroup     GPIO
 585           * \remarks     
 586          ******************************************************************************/
 587          byte GPIO_getPortValue(PERIPH_GPIO gpio)
 588          {
 589   1          switch (gpio)
 590   1          {
 591   2              case PERIPH_GPIO_0: return P0;
 592   2              case PERIPH_GPIO_1: return P1;
 593   2              case PERIPH_GPIO_2: return P2;
 594   2              case PERIPH_GPIO_3: return P3;
 595   2              case PERIPH_GPIO_4: return P4;
 596   2              case PERIPH_GPIO_5: return P5;
 597   2              case PERIPH_GPIO_6: return P6;
 598   2              case PERIPH_GPIO_7: return P7;
 599   2              default: return 0x00;
 600   2          }
 601   1      }
 602          
 603          
 604          #endif
 605          
 606          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1359    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.01   GPIO                                                                  04/22/2023 17:21:22 PAGE 11  

   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
