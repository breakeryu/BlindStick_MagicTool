C51 COMPILER V9.01   GPIO                                                                  04/03/2023 18:09:44 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN .\output\gpio.obj
COMPILER INVOKED BY: E:\Keil_v4\C51\BIN\C51.EXE Mid_Driver\src\gpio.c BROWSE INCDIR(.\App;.\Mid_Driver;.\Mid_Driver\inc)
                    - DEBUG OBJECTEXTEND PRINT(.\listing\gpio.lst) OBJECT(.\output\gpio.obj)

line level    source

   1          /*****************************************************************************/
   2          /** 
   3           * \file        gpio.c
   4           * \author      Jiabin Hsu  | zsiothsu(at)zhishan-iot.tk
   5           * \author      Weilun Fong | wlf@zhishan-iot.tk
   6           * \author      Xiaoyu Ren
   7           * \brief       operations for GPIO module
   8           * \note        
   9           * \version     v1.3
  10           * \ingroup     GPIO
  11          ******************************************************************************/
  12          
  13          #include "gpio.h"
  14          
  15          
  16          #ifdef COMPILE_GPIO
  17          
  18          /*****************************************************************************/
  19          /** 
  20           * \author      Weilun Fong
  21           * \author      Xiaoyu Ren
  22           * \date        
  23           * \brief       configure state of target GPIO Mode 
  24           * \param[in]   gpio: target GPIO port
  25           * \param[in]   pin : target GPIO pin
  26           * \param[in]   mode   : expected mode
  27           * \return      none
  28           * \ingroup     GPIO
  29           * \remarks     
  30          ******************************************************************************/
  31          void GPIO_configMode(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin, PERIPH_GPIO_PIN_MODE mode)
  32          {
  33   1          
  34   1      
  35   1          switch (gpio)
  36   1          {
  37   2              case PERIPH_GPIO_0: 
  38   2                  switch (mode)
  39   2                  {
  40   3                      case PERIPH_GPIO_PIN_MODE_GENERAL_IN_OUT:
  41   3                          CLR_BIT_MASK(P0M0, pin); CLR_BIT_MASK(P0M1, pin);
  42   3                          break;
  43   3                      case PERIPH_GPIO_PIN_MODE_PUSH_PULL_OUTPUT:
  44   3                          SET_BIT_MASK(P0M0, pin); CLR_BIT_MASK(P0M1, pin);
  45   3                          break;
  46   3                      case PERIPH_GPIO_PIN_MODE_HIGH_Z_INPUT:
  47   3                          CLR_BIT_MASK(P0M0, pin); SET_BIT_MASK(P0M1, pin);
  48   3                          break;
  49   3                      case PERIPH_GPIO_PIN_MODE_OPEN_DRAIN_OUTPUT:
  50   3                          SET_BIT_MASK(P0M0, pin); SET_BIT_MASK(P0M1, pin);
  51   3                          break;
  52   3                      default:
  53   3                          break;
  54   3                  }
C51 COMPILER V9.01   GPIO                                                                  04/03/2023 18:09:44 PAGE 2   

  55   2                  break;
  56   2              case PERIPH_GPIO_1: 
  57   2                  switch (mode)
  58   2                  {
  59   3                      case PERIPH_GPIO_PIN_MODE_GENERAL_IN_OUT:
  60   3                          CLR_BIT_MASK(P1M0, pin); CLR_BIT_MASK(P1M1, pin);
  61   3                          break;
  62   3                      case PERIPH_GPIO_PIN_MODE_PUSH_PULL_OUTPUT:
  63   3                          SET_BIT_MASK(P1M0, pin); CLR_BIT_MASK(P1M1, pin);
  64   3                          break;
  65   3                      case PERIPH_GPIO_PIN_MODE_HIGH_Z_INPUT:
  66   3                          CLR_BIT_MASK(P1M0, pin); SET_BIT_MASK(P1M1, pin);
  67   3                          break;
  68   3                      case PERIPH_GPIO_PIN_MODE_OPEN_DRAIN_OUTPUT:
  69   3                          SET_BIT_MASK(P1M0, pin); SET_BIT_MASK(P1M1, pin);
  70   3                          break;
  71   3                      default:
  72   3                          break;
  73   3                  }
  74   2                  break;
  75   2              case PERIPH_GPIO_2: 
  76   2                  switch (mode)
  77   2                  {
  78   3                      case PERIPH_GPIO_PIN_MODE_GENERAL_IN_OUT:
  79   3                          CLR_BIT_MASK(P2M0, pin); CLR_BIT_MASK(P2M1, pin);
  80   3                          break;
  81   3                      case PERIPH_GPIO_PIN_MODE_PUSH_PULL_OUTPUT:
  82   3                          SET_BIT_MASK(P2M0, pin); CLR_BIT_MASK(P2M1, pin);
  83   3                          break;
  84   3                      case PERIPH_GPIO_PIN_MODE_HIGH_Z_INPUT:
  85   3                          CLR_BIT_MASK(P2M0, pin); SET_BIT_MASK(P2M1, pin);
  86   3                          break;
  87   3                      case PERIPH_GPIO_PIN_MODE_OPEN_DRAIN_OUTPUT:
  88   3                          SET_BIT_MASK(P2M0, pin); SET_BIT_MASK(P2M1, pin);
  89   3                          break;
  90   3                      default:
  91   3                          break;
  92   3                  }
  93   2                  break;
  94   2              case PERIPH_GPIO_3: 
  95   2                  switch (mode)
  96   2                  {
  97   3                      case PERIPH_GPIO_PIN_MODE_GENERAL_IN_OUT:
  98   3                          CLR_BIT_MASK(P3M0, pin); CLR_BIT_MASK(P3M1, pin);
  99   3                          break;
 100   3                      case PERIPH_GPIO_PIN_MODE_PUSH_PULL_OUTPUT:
 101   3                          SET_BIT_MASK(P3M0, pin); CLR_BIT_MASK(P3M1, pin);
 102   3                          break;
 103   3                      case PERIPH_GPIO_PIN_MODE_HIGH_Z_INPUT:
 104   3                          CLR_BIT_MASK(P3M0, pin); SET_BIT_MASK(P3M1, pin);
 105   3                          break;
 106   3                      case PERIPH_GPIO_PIN_MODE_OPEN_DRAIN_OUTPUT:
 107   3                          SET_BIT_MASK(P3M0, pin); SET_BIT_MASK(P3M1, pin);
 108   3                          break;
 109   3                      default:
 110   3                          break;
 111   3                  }
 112   2                  break;
 113   2              case PERIPH_GPIO_4: 
 114   2                  switch (mode)
 115   2                  {
 116   3                      case PERIPH_GPIO_PIN_MODE_GENERAL_IN_OUT:
C51 COMPILER V9.01   GPIO                                                                  04/03/2023 18:09:44 PAGE 3   

 117   3                          CLR_BIT_MASK(P4M1, pin); CLR_BIT_MASK(P4M0, pin); 
 118   3                          break;
 119   3                      case PERIPH_GPIO_PIN_MODE_PUSH_PULL_OUTPUT:
 120   3                          SET_BIT_MASK(P4M0, pin); CLR_BIT_MASK(P4M1, pin);
 121   3                          break;
 122   3                      case PERIPH_GPIO_PIN_MODE_HIGH_Z_INPUT:
 123   3                          CLR_BIT_MASK(P4M0, pin); SET_BIT_MASK(P4M1, pin);
 124   3                          break;
 125   3                      case PERIPH_GPIO_PIN_MODE_OPEN_DRAIN_OUTPUT:
 126   3                          SET_BIT_MASK(P4M0, pin); SET_BIT_MASK(P4M1, pin);
 127   3                          break;
 128   3                      default:
 129   3                          break;
 130   3                  }
 131   2                  break;
 132   2              case PERIPH_GPIO_5: 
 133   2                  switch (mode)
 134   2                  {
 135   3                      case PERIPH_GPIO_PIN_MODE_GENERAL_IN_OUT:
 136   3                          CLR_BIT_MASK(P5M0, pin); CLR_BIT_MASK(P5M1, pin);
 137   3                          break;
 138   3                      case PERIPH_GPIO_PIN_MODE_PUSH_PULL_OUTPUT:
 139   3                          SET_BIT_MASK(P5M0, pin); CLR_BIT_MASK(P5M1, pin);
 140   3                          break;
 141   3                      case PERIPH_GPIO_PIN_MODE_HIGH_Z_INPUT:
 142   3                          CLR_BIT_MASK(P5M0, pin); SET_BIT_MASK(P5M1, pin);
 143   3                          break;
 144   3                      case PERIPH_GPIO_PIN_MODE_OPEN_DRAIN_OUTPUT:
 145   3                          SET_BIT_MASK(P5M0, pin); SET_BIT_MASK(P5M1, pin);
 146   3                          break;
 147   3                      default:
 148   3                          break;
 149   3                  }
 150   2                  break;
 151   2              case PERIPH_GPIO_6: 
 152   2                  switch (mode)
 153   2                  {
 154   3                      case PERIPH_GPIO_PIN_MODE_GENERAL_IN_OUT:
 155   3                          CLR_BIT_MASK(P6M0, pin); CLR_BIT_MASK(P6M1, pin);
 156   3                          break;
 157   3                      case PERIPH_GPIO_PIN_MODE_PUSH_PULL_OUTPUT:
 158   3                          SET_BIT_MASK(P6M0, pin); CLR_BIT_MASK(P6M1, pin);
 159   3                          break;
 160   3                      case PERIPH_GPIO_PIN_MODE_HIGH_Z_INPUT:
 161   3                          CLR_BIT_MASK(P6M0, pin); SET_BIT_MASK(P6M1, pin);
 162   3                          break;
 163   3                      case PERIPH_GPIO_PIN_MODE_OPEN_DRAIN_OUTPUT:
 164   3                          SET_BIT_MASK(P6M0, pin); SET_BIT_MASK(P6M1, pin);
 165   3                          break;
 166   3                      default:
 167   3                          break;
 168   3                  }
 169   2                  break;
 170   2              case PERIPH_GPIO_7: 
 171   2                  switch (mode)
 172   2                      {
 173   3                          case PERIPH_GPIO_PIN_MODE_GENERAL_IN_OUT:
 174   3                              CLR_BIT_MASK(P7M0, pin); CLR_BIT_MASK(P7M1, pin);
 175   3                              break;
 176   3                          case PERIPH_GPIO_PIN_MODE_PUSH_PULL_OUTPUT:
 177   3                              SET_BIT_MASK(P7M0, pin); CLR_BIT_MASK(P7M1, pin);
 178   3                              break;
C51 COMPILER V9.01   GPIO                                                                  04/03/2023 18:09:44 PAGE 4   

 179   3                          case PERIPH_GPIO_PIN_MODE_HIGH_Z_INPUT:
 180   3                              CLR_BIT_MASK(P7M0, pin); SET_BIT_MASK(P7M1, pin);
 181   3                              break;
 182   3                          case PERIPH_GPIO_PIN_MODE_OPEN_DRAIN_OUTPUT:
 183   3                              SET_BIT_MASK(P7M0, pin); SET_BIT_MASK(P7M1, pin);
 184   3                              break;
 185   3                          default:
 186   3                              break;
 187   3                      }
 188   2                  break;
 189   2              default: break;
 190   2          }
 191   1      }
 192          
 193          /*****************************************************************************/
 194          /** 
 195           * \author      Xiaoyu Ren
 196           * \date        
 197           * \brief       configure state of target GPIO High Current as SET or RESET
 198           * \param[in]   gpio: target GPIO port
 199           * \param[in]   pin : target GPIO pin
 200           * \param[in]   f   : expected state
 201           * \return      none
 202           * \ingroup     GPIO
 203           * \remarks     
 204          ******************************************************************************/
 205          void GPIO_configHighCurrent(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin, FunctionalState f)
 206          {
 207   1          SFRX_ON();
 208   1          if (f == RESET)
 209   1          {
 210   2              GPIO_setGeneralCurrent(gpio, pin);
 211   2          }
 212   1          else
 213   1          {
 214   2              GPIO_setHighCurrent(gpio, pin);
 215   2          }
 216   1          SFRX_OFF();
 217   1      }
 218          
 219          
 220          /*****************************************************************************/
 221          /** 
 222           * \author      Xiaoyu Ren
 223           * \date        
 224           * \brief       set target GPIO Pin General Current
 225           * \param[in]   gpio: target GPIO port
 226           * \param[in]   pin : target GPIO pin
 227           * \return      none
 228           * \ingroup     GPIO
 229           * \remarks     
 230          ******************************************************************************/
 231          void GPIO_setGeneralCurrent(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 232          {
 233   1          switch (gpio)
 234   1          {
 235   2              case PERIPH_GPIO_0: SET_BIT_MASK(P0DR, pin); break;
 236   2              case PERIPH_GPIO_1: SET_BIT_MASK(P1DR, pin); break;
 237   2              case PERIPH_GPIO_2: SET_BIT_MASK(P2DR, pin); break;
 238   2              case PERIPH_GPIO_3: SET_BIT_MASK(P3DR, pin); break;
 239   2              case PERIPH_GPIO_4: SET_BIT_MASK(P4DR, pin); break;
 240   2              case PERIPH_GPIO_5: SET_BIT_MASK(P5DR, pin); break;
C51 COMPILER V9.01   GPIO                                                                  04/03/2023 18:09:44 PAGE 5   

 241   2              case PERIPH_GPIO_6: SET_BIT_MASK(P6DR, pin); break;
 242   2              case PERIPH_GPIO_7: SET_BIT_MASK(P7DR, pin); break;
 243   2              default: break;
 244   2          }
 245   1      }
 246          
 247          /*****************************************************************************/
 248          /** 
 249           * \author      Xiaoyu Ren
 250           * \date        
 251           * \brief       set target GPIO Pin High Current
 252           * \param[in]   gpio: target GPIO port
 253           * \param[in]   pin : target GPIO pin
 254           * \return      none
 255           * \ingroup     GPIO
 256           * \remarks     
 257          ******************************************************************************/
 258          void GPIO_setHighCurrent(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 259          {
 260   1          switch (gpio)
 261   1          {
 262   2              case PERIPH_GPIO_0: CLR_BIT_MASK(P0DR, pin); break;
 263   2              case PERIPH_GPIO_1: CLR_BIT_MASK(P1DR, pin); break;
 264   2              case PERIPH_GPIO_2: CLR_BIT_MASK(P2DR, pin); break;
 265   2              case PERIPH_GPIO_3: CLR_BIT_MASK(P3DR, pin); break;
 266   2              case PERIPH_GPIO_4: CLR_BIT_MASK(P4DR, pin); break;
 267   2              case PERIPH_GPIO_5: CLR_BIT_MASK(P5DR, pin); break;
 268   2              case PERIPH_GPIO_6: CLR_BIT_MASK(P6DR, pin); break;
 269   2              case PERIPH_GPIO_7: CLR_BIT_MASK(P7DR, pin); break;
 270   2              default: break;
 271   2          }
 272   1      }
 273          
 274          
 275          
 276          /*****************************************************************************/
 277          /** 
 278           * \author      Xiaoyu Ren
 279           * \date        
 280           * \brief       configure state of target GPIO High Speed as SET or RESET
 281           * \param[in]   gpio: target GPIO port
 282           * \param[in]   pin : target GPIO pin
 283           * \param[in]   f   : expected state
 284           * \return      none
 285           * \ingroup     GPIO
 286           * \remarks     
 287          ******************************************************************************/
 288          void GPIO_configHighSpeed(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin, FunctionalState f)
 289          {
 290   1          SFRX_ON();
 291   1          if (f == RESET)
 292   1          {
 293   2              GPIO_setGeneralSpeed(gpio, pin);
 294   2          }
 295   1          else
 296   1          {
 297   2              GPIO_setHighSpeed(gpio, pin);
 298   2          }
 299   1          SFRX_OFF();
 300   1      }
 301          
 302          
C51 COMPILER V9.01   GPIO                                                                  04/03/2023 18:09:44 PAGE 6   

 303          /*****************************************************************************/
 304          /** 
 305           * \author      Xiaoyu Ren
 306           * \date        
 307           * \brief       set target GPIO Pin General Speed
 308           * \param[in]   gpio: target GPIO port
 309           * \param[in]   pin : target GPIO pin
 310           * \return      none
 311           * \ingroup     GPIO
 312           * \remarks     
 313          ******************************************************************************/
 314          void GPIO_setGeneralSpeed(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 315          {
 316   1          switch (gpio)
 317   1          {
 318   2              case PERIPH_GPIO_0: SET_BIT_MASK(P0SR, pin); break;
 319   2              case PERIPH_GPIO_1: SET_BIT_MASK(P1SR, pin); break;
 320   2              case PERIPH_GPIO_2: SET_BIT_MASK(P2SR, pin); break;
 321   2              case PERIPH_GPIO_3: SET_BIT_MASK(P3SR, pin); break;
 322   2              case PERIPH_GPIO_4: SET_BIT_MASK(P4SR, pin); break;
 323   2              case PERIPH_GPIO_5: SET_BIT_MASK(P5SR, pin); break;
 324   2              case PERIPH_GPIO_6: SET_BIT_MASK(P6SR, pin); break;
 325   2              case PERIPH_GPIO_7: SET_BIT_MASK(P7SR, pin); break;
 326   2              default: break;
 327   2          }
 328   1      }
 329          
 330          /*****************************************************************************/
 331          /** 
 332           * \author      Xiaoyu Ren
 333           * \date        
 334           * \brief       set target GPIO Pin High Speed
 335           * \param[in]   gpio: target GPIO port
 336           * \param[in]   pin : target GPIO pin
 337           * \return      none
 338           * \ingroup     GPIO
 339           * \remarks     
 340          ******************************************************************************/
 341          void GPIO_setHighSpeed(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 342          {
 343   1          switch (gpio)
 344   1          {
 345   2              case PERIPH_GPIO_0: CLR_BIT_MASK(P0SR, pin); break;
 346   2              case PERIPH_GPIO_1: CLR_BIT_MASK(P1SR, pin); break;
 347   2              case PERIPH_GPIO_2: CLR_BIT_MASK(P2SR, pin); break;
 348   2              case PERIPH_GPIO_3: CLR_BIT_MASK(P3SR, pin); break;
 349   2              case PERIPH_GPIO_4: CLR_BIT_MASK(P4SR, pin); break;
 350   2              case PERIPH_GPIO_5: CLR_BIT_MASK(P5SR, pin); break;
 351   2              case PERIPH_GPIO_6: CLR_BIT_MASK(P6SR, pin); break;
 352   2              case PERIPH_GPIO_7: CLR_BIT_MASK(P7SR, pin); break;
 353   2              default: break;
 354   2          }
 355   1      }
 356          
 357          
 358          
 359          /*****************************************************************************/
 360          /** 
 361           * \author      Xiaoyu Ren
 362           * \date        
 363           * \brief       configure state of target GPIO Pull Up as SET or RESET
 364           * \param[in]   gpio: target GPIO port
C51 COMPILER V9.01   GPIO                                                                  04/03/2023 18:09:44 PAGE 7   

 365           * \param[in]   pin : target GPIO pin
 366           * \param[in]   f   : expected state
 367           * \return      none
 368           * \ingroup     GPIO
 369           * \remarks     
 370          ******************************************************************************/
 371          void GPIO_configPullUP(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin, FunctionalState f)
 372          {
 373   1          SFRX_ON();
 374   1          if (f == RESET)
 375   1          {
 376   2              GPIO_resetPullUp(gpio, pin);
 377   2          }
 378   1          else
 379   1          {
 380   2              GPIO_setPullUp(gpio, pin);
 381   2          }
 382   1          SFRX_OFF();
 383   1      }
 384          
 385          
 386          
 387          /*****************************************************************************/
 388          /** 
 389           * \author      Xiaoyu Ren
 390           * \date        
 391           * \brief       reset target GPIO Pin Pull Up 
 392           * \param[in]   gpio: target GPIO port
 393           * \param[in]   pin : target GPIO pin
 394           * \return      none
 395           * \ingroup     GPIO
 396           * \remarks     
 397          ******************************************************************************/
 398          void GPIO_resetPullUp(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 399          {
 400   1          switch (gpio)
 401   1          {
 402   2              case PERIPH_GPIO_0: CLR_BIT_MASK(P0PU, pin); break;
 403   2              case PERIPH_GPIO_1: CLR_BIT_MASK(P1PU, pin); break;
 404   2              case PERIPH_GPIO_2: CLR_BIT_MASK(P2PU, pin); break;
 405   2              case PERIPH_GPIO_3: CLR_BIT_MASK(P3PU, pin); break;
 406   2              case PERIPH_GPIO_4: CLR_BIT_MASK(P4PU, pin); break;
 407   2              case PERIPH_GPIO_5: CLR_BIT_MASK(P5PU, pin); break;
 408   2              case PERIPH_GPIO_6: CLR_BIT_MASK(P6PU, pin); break;
 409   2              case PERIPH_GPIO_7: CLR_BIT_MASK(P7PU, pin); break;
 410   2              default: break;
 411   2          }
 412   1      }
 413          
 414          /*****************************************************************************/
 415          /** 
 416           * \author      Xiaoyu Ren
 417           * \date        
 418           * \brief       set target GPIO Pin Pull Up 
 419           * \param[in]   gpio: target GPIO port
 420           * \param[in]   pin : target GPIO pin
 421           * \return      none
 422           * \ingroup     GPIO
 423           * \remarks     
 424          ******************************************************************************/
 425          void GPIO_setPullUp(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 426          {
C51 COMPILER V9.01   GPIO                                                                  04/03/2023 18:09:44 PAGE 8   

 427   1          switch (gpio)
 428   1          {
 429   2              case PERIPH_GPIO_0: SET_BIT_MASK(P0PU, pin); break;
 430   2              case PERIPH_GPIO_1: SET_BIT_MASK(P1PU, pin); break;
 431   2              case PERIPH_GPIO_2: SET_BIT_MASK(P2PU, pin); break;
 432   2              case PERIPH_GPIO_3: SET_BIT_MASK(P3PU, pin); break;
 433   2              case PERIPH_GPIO_4: SET_BIT_MASK(P4PU, pin); break;
 434   2              case PERIPH_GPIO_5: SET_BIT_MASK(P5PU, pin); break;
 435   2              case PERIPH_GPIO_6: SET_BIT_MASK(P6PU, pin); break;
 436   2              case PERIPH_GPIO_7: SET_BIT_MASK(P7PU, pin); break;
 437   2              default: break;
 438   2          }
 439   1      }
 440          
 441          
 442          
 443          /*****************************************************************************/
 444          /** 
 445           * \author      Weilun Fong
 446           * \author      Xiaoyu Ren
 447           * \date        2023/04/02
 448           * \brief       configure state of target GPIO bit as SET or RESET
 449           * \param[in]   gpio: target GPIO port
 450           * \param[in]   pin : target GPIO pin
 451           * \param[in]   f   : expected state
 452           * \return      none
 453           * \ingroup     GPIO
 454           * \remarks     
 455          ******************************************************************************/
 456          void GPIO_configBitValue(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin, FunctionalState f)
 457          {
 458   1          if (f == RESET)
 459   1          {
 460   2              GPIO_resetBitValue(gpio, pin);
 461   2          }
 462   1          else
 463   1          {
 464   2              GPIO_setBitValue(gpio, pin);
 465   2          }
 466   1      }
 467          
 468          /*****************************************************************************/
 469          /** 
 470           * \author      Weilun Fong
 471           * \author      Xiaoyu Ren
 472           * \date        2023/04/02
 473           * \brief       reset target GPIO pin
 474           * \param[in]   gpio: target GPIO port
 475           * \param[in]   pin : target GPIO pin
 476           * \return      none
 477           * \ingroup     GPIO
 478           * \remarks     
 479          ******************************************************************************/
 480          void GPIO_resetBitValue(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 481          {
 482   1          switch (gpio)
 483   1          {
 484   2              case PERIPH_GPIO_0: CLR_BIT_MASK(P0, pin); break;
 485   2              case PERIPH_GPIO_1: CLR_BIT_MASK(P1, pin); break;
 486   2              case PERIPH_GPIO_2: CLR_BIT_MASK(P2, pin); break;
 487   2              case PERIPH_GPIO_3: CLR_BIT_MASK(P3, pin); break;
 488   2              case PERIPH_GPIO_4: CLR_BIT_MASK(P4, pin); break;
C51 COMPILER V9.01   GPIO                                                                  04/03/2023 18:09:44 PAGE 9   

 489   2              case PERIPH_GPIO_5: CLR_BIT_MASK(P5, pin); break;
 490   2              case PERIPH_GPIO_6: CLR_BIT_MASK(P6, pin); break;
 491   2              case PERIPH_GPIO_7: CLR_BIT_MASK(P7, pin); break;
 492   2              default: break;
 493   2          }
 494   1      }
 495          
 496          /*****************************************************************************/
 497          /** 
 498           * \author      Weilun Fong
 499           * \author      Xiaoyu Ren
 500           * \date        2023/04/02
 501           * \brief       set target GPIO pin
 502           * \param[in]   gpio: target GPIO port
 503           * \param[in]   pin : target GPIO pin
 504           * \return      none
 505           * \ingroup     GPIO
 506           * \remarks     
 507          ******************************************************************************/
 508          void GPIO_setBitValue(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 509          {
 510   1          switch (gpio)
 511   1          {
 512   2              case PERIPH_GPIO_0: SET_BIT_MASK(P0, pin); break;
 513   2              case PERIPH_GPIO_1: SET_BIT_MASK(P1, pin); break;
 514   2              case PERIPH_GPIO_2: SET_BIT_MASK(P2, pin); break;
 515   2              case PERIPH_GPIO_3: SET_BIT_MASK(P3, pin); break;
 516   2              case PERIPH_GPIO_4: SET_BIT_MASK(P4, pin); break;
 517   2              case PERIPH_GPIO_5: SET_BIT_MASK(P5, pin); break;
 518   2              case PERIPH_GPIO_6: SET_BIT_MASK(P6, pin); break;
 519   2              case PERIPH_GPIO_7: SET_BIT_MASK(P7, pin); break;
 520   2              default: break;
 521   2          }
 522   1      }
 523          
 524          
 525          /*****************************************************************************/
 526          /** 
 527           * \author      Weilun Fong
 528           * \author      Xiaoyu Ren
 529           * \date        2023/04/02
 530           * \brief       toggle state of target GPIO pin
 531           * \param[in]   gpio: target GPIO port
 532           * \param[in]   pin : target GPIO pin
 533           * \return      none
 534           * \ingroup     GPIO
 535           * \remarks     
 536          ******************************************************************************/
 537          void GPIO_toggleBitValue(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 538          {
 539   1          switch (gpio)
 540   1          {
 541   2              case PERIPH_GPIO_0: NOT_BIT_MASK(P0, pin); break;
 542   2              case PERIPH_GPIO_1: NOT_BIT_MASK(P1, pin); break;
 543   2              case PERIPH_GPIO_2: NOT_BIT_MASK(P2, pin); break;
 544   2              case PERIPH_GPIO_3: NOT_BIT_MASK(P3, pin); break;
 545   2              case PERIPH_GPIO_4: NOT_BIT_MASK(P4, pin); break;
 546   2              case PERIPH_GPIO_5: NOT_BIT_MASK(P5, pin); break;
 547   2              case PERIPH_GPIO_6: NOT_BIT_MASK(P6, pin); break;
 548   2              case PERIPH_GPIO_7: NOT_BIT_MASK(P7, pin); break;       
 549   2              default: break;
 550   2          }
C51 COMPILER V9.01   GPIO                                                                  04/03/2023 18:09:44 PAGE 10  

 551   1      }
 552          
 553          
 554          /*****************************************************************************/
 555          /** 
 556           * \author      Weilun Fong
 557           * \author      Xiaoyu Ren
 558           * \date        2023/04/02
 559           * \brief       get state of target GPIO pin
 560           * \param[in]   gpio: target GPIO port
 561           * \param[in]   pin : target GPIO pin
 562           * \return      SET or RESET
 563           * \ingroup     GPIO
 564           * \remarks     
 565          ******************************************************************************/
 566          FunctionalState GPIO_getBitValue(PERIPH_GPIO gpio, PERIPH_GPIO_PIN pin)
 567          {
 568   1          switch (gpio)
 569   1          {
 570   2              case PERIPH_GPIO_0: return GET_BIT(P0, pin);
 571   2              case PERIPH_GPIO_1: return GET_BIT(P1, pin);
 572   2              case PERIPH_GPIO_2: return GET_BIT(P2, pin);
 573   2              case PERIPH_GPIO_3: return GET_BIT(P3, pin);
 574   2              case PERIPH_GPIO_4: return GET_BIT(P4, pin);
 575   2              case PERIPH_GPIO_5: return GET_BIT(P5, pin);
 576   2              case PERIPH_GPIO_6: return GET_BIT(P6, pin);
 577   2              case PERIPH_GPIO_7: return GET_BIT(P7, pin);
 578   2              default: return RESET;
 579   2          }
 580   1      }
 581          
 582          /*****************************************************************************/
 583          /** 
 584           * \author      Weilun Fong
 585           * \author      Xiaoyu Ren
 586           * \date        2023/04/02
 587           * \brief       get value of target GPIO port
 588           * \param[in]   gpio: target GPIO port
 589           * \return      current value of target GPIO port
 590           * \ingroup     GPIO
 591           * \remarks     
 592          ******************************************************************************/
 593          byte GPIO_getPortValue(PERIPH_GPIO gpio)
 594          {
 595   1          switch (gpio)
 596   1          {
 597   2              case PERIPH_GPIO_0: return P0;
 598   2              case PERIPH_GPIO_1: return P1;
 599   2              case PERIPH_GPIO_2: return P2;
 600   2              case PERIPH_GPIO_3: return P3;
 601   2              case PERIPH_GPIO_4: return P4;
 602   2              case PERIPH_GPIO_5: return P5;
 603   2              case PERIPH_GPIO_6: return P6;
 604   2              case PERIPH_GPIO_7: return P7;
 605   2              default: return 0x00;
 606   2          }
 607   1      }
 608          
 609          
 610          #endif
 611          
 612          
C51 COMPILER V9.01   GPIO                                                                  04/03/2023 18:09:44 PAGE 11  



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1383    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
