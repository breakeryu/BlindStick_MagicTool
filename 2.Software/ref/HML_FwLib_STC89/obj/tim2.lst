                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module tim2
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _TIM2_BAUD_cmd_PARM_2
                                     12 	.globl _PX3
                                     13 	.globl _EX3
                                     14 	.globl _IE3
                                     15 	.globl _IT3
                                     16 	.globl _PX2
                                     17 	.globl _EX2
                                     18 	.globl _IE2
                                     19 	.globl _IT2
                                     20 	.globl _TF2
                                     21 	.globl _EXF2
                                     22 	.globl _RCLK
                                     23 	.globl _TCLK
                                     24 	.globl _EXEN2
                                     25 	.globl _TR2
                                     26 	.globl _T2_CT
                                     27 	.globl _CPRL2
                                     28 	.globl _INT2
                                     29 	.globl _INT3
                                     30 	.globl _P4_3
                                     31 	.globl _P4_2
                                     32 	.globl _P4_1
                                     33 	.globl _P4_0
                                     34 	.globl _T2EX
                                     35 	.globl _T2
                                     36 	.globl _PT2
                                     37 	.globl _ET2
                                     38 	.globl _CY
                                     39 	.globl _AC
                                     40 	.globl _F0
                                     41 	.globl _RS1
                                     42 	.globl _RS0
                                     43 	.globl _OV
                                     44 	.globl _F1
                                     45 	.globl _P
                                     46 	.globl _PS
                                     47 	.globl _PT1
                                     48 	.globl _PX1
                                     49 	.globl _PT0
                                     50 	.globl _PX0
                                     51 	.globl _RD
                                     52 	.globl _WR
                                     53 	.globl _T1
                                     54 	.globl _T0
                                     55 	.globl _INT1
                                     56 	.globl _INT0
                                     57 	.globl _TXD
                                     58 	.globl _RXD
                                     59 	.globl _P3_7
                                     60 	.globl _P3_6
                                     61 	.globl _P3_5
                                     62 	.globl _P3_4
                                     63 	.globl _P3_3
                                     64 	.globl _P3_2
                                     65 	.globl _P3_1
                                     66 	.globl _P3_0
                                     67 	.globl _EA
                                     68 	.globl _ES
                                     69 	.globl _ET1
                                     70 	.globl _EX1
                                     71 	.globl _ET0
                                     72 	.globl _EX0
                                     73 	.globl _P2_7
                                     74 	.globl _P2_6
                                     75 	.globl _P2_5
                                     76 	.globl _P2_4
                                     77 	.globl _P2_3
                                     78 	.globl _P2_2
                                     79 	.globl _P2_1
                                     80 	.globl _P2_0
                                     81 	.globl _SM0
                                     82 	.globl _SM1
                                     83 	.globl _SM2
                                     84 	.globl _REN
                                     85 	.globl _TB8
                                     86 	.globl _RB8
                                     87 	.globl _TI
                                     88 	.globl _RI
                                     89 	.globl _P1_7
                                     90 	.globl _P1_6
                                     91 	.globl _P1_5
                                     92 	.globl _P1_4
                                     93 	.globl _P1_3
                                     94 	.globl _P1_2
                                     95 	.globl _P1_1
                                     96 	.globl _P1_0
                                     97 	.globl _TF1
                                     98 	.globl _TR1
                                     99 	.globl _TF0
                                    100 	.globl _TR0
                                    101 	.globl _IE1
                                    102 	.globl _IT1
                                    103 	.globl _IE0
                                    104 	.globl _IT0
                                    105 	.globl _P0_7
                                    106 	.globl _P0_6
                                    107 	.globl _P0_5
                                    108 	.globl _P0_4
                                    109 	.globl _P0_3
                                    110 	.globl _P0_2
                                    111 	.globl _P0_1
                                    112 	.globl _P0_0
                                    113 	.globl _P4
                                    114 	.globl _ISP_CONTR
                                    115 	.globl _ISP_TRIG
                                    116 	.globl _ISP_CMD
                                    117 	.globl _ISP_ADDRL
                                    118 	.globl _ISP_ADDRH
                                    119 	.globl _ISP_DATA
                                    120 	.globl _WDT_CONTR
                                    121 	.globl _TH2
                                    122 	.globl _TL2
                                    123 	.globl _RCAP2H
                                    124 	.globl _RCAP2L
                                    125 	.globl _T2MOD
                                    126 	.globl _T2CON
                                    127 	.globl _XICON
                                    128 	.globl _IPH
                                    129 	.globl _SADDR1
                                    130 	.globl _AUXR1
                                    131 	.globl _AUXR
                                    132 	.globl _B
                                    133 	.globl _ACC
                                    134 	.globl _PSW
                                    135 	.globl _IP
                                    136 	.globl _P3
                                    137 	.globl _IE
                                    138 	.globl _P2
                                    139 	.globl _SBUF
                                    140 	.globl _SCON
                                    141 	.globl _P1
                                    142 	.globl _TH1
                                    143 	.globl _TH0
                                    144 	.globl _TL1
                                    145 	.globl _TL0
                                    146 	.globl _TMOD
                                    147 	.globl _TCON
                                    148 	.globl _PCON
                                    149 	.globl _DPH
                                    150 	.globl _DPL
                                    151 	.globl _SP
                                    152 	.globl _P0
                                    153 	.globl _TIM2_calculateValue
                                    154 	.globl _TIM2_clearFlag
                                    155 	.globl _TIM2_cmd
                                    156 	.globl _TIM2_config
                                    157 	.globl _TIM2_getCaptureValue
                                    158 	.globl _TIM2_getValue
                                    159 	.globl _TIM2_isExternalEvent
                                    160 	.globl _TIM2_isOverflow
                                    161 	.globl _TIM2_setFunction
                                    162 	.globl _TIM2_setMode
                                    163 	.globl _TIM2_setReloadValue
                                    164 	.globl _TIM2_setValue
                                    165 	.globl _TIM2_BAUD_cmd
                                    166 	.globl _TIM2_INT_cmd
                                    167 	.globl _TIM2_INT_setPriority
                                    168 	.globl _TIM2_T2EX_cmd
                                    169 ;--------------------------------------------------------
                                    170 ; special function registers
                                    171 ;--------------------------------------------------------
                                    172 	.area RSEG    (ABS,DATA)
      000000                        173 	.org 0x0000
                           000080   174 _P0	=	0x0080
                           000081   175 _SP	=	0x0081
                           000082   176 _DPL	=	0x0082
                           000083   177 _DPH	=	0x0083
                           000087   178 _PCON	=	0x0087
                           000088   179 _TCON	=	0x0088
                           000089   180 _TMOD	=	0x0089
                           00008A   181 _TL0	=	0x008a
                           00008B   182 _TL1	=	0x008b
                           00008C   183 _TH0	=	0x008c
                           00008D   184 _TH1	=	0x008d
                           000090   185 _P1	=	0x0090
                           000098   186 _SCON	=	0x0098
                           000099   187 _SBUF	=	0x0099
                           0000A0   188 _P2	=	0x00a0
                           0000A8   189 _IE	=	0x00a8
                           0000B0   190 _P3	=	0x00b0
                           0000B8   191 _IP	=	0x00b8
                           0000D0   192 _PSW	=	0x00d0
                           0000E0   193 _ACC	=	0x00e0
                           0000F0   194 _B	=	0x00f0
                           00008E   195 _AUXR	=	0x008e
                           0000A2   196 _AUXR1	=	0x00a2
                           0000A9   197 _SADDR1	=	0x00a9
                           0000B7   198 _IPH	=	0x00b7
                           0000C0   199 _XICON	=	0x00c0
                           0000C8   200 _T2CON	=	0x00c8
                           0000C9   201 _T2MOD	=	0x00c9
                           0000CA   202 _RCAP2L	=	0x00ca
                           0000CB   203 _RCAP2H	=	0x00cb
                           0000CC   204 _TL2	=	0x00cc
                           0000CD   205 _TH2	=	0x00cd
                           0000E1   206 _WDT_CONTR	=	0x00e1
                           0000E2   207 _ISP_DATA	=	0x00e2
                           0000E3   208 _ISP_ADDRH	=	0x00e3
                           0000E4   209 _ISP_ADDRL	=	0x00e4
                           0000E5   210 _ISP_CMD	=	0x00e5
                           0000E6   211 _ISP_TRIG	=	0x00e6
                           0000E7   212 _ISP_CONTR	=	0x00e7
                           0000E8   213 _P4	=	0x00e8
                                    214 ;--------------------------------------------------------
                                    215 ; special function bits
                                    216 ;--------------------------------------------------------
                                    217 	.area RSEG    (ABS,DATA)
      000000                        218 	.org 0x0000
                           000080   219 _P0_0	=	0x0080
                           000081   220 _P0_1	=	0x0081
                           000082   221 _P0_2	=	0x0082
                           000083   222 _P0_3	=	0x0083
                           000084   223 _P0_4	=	0x0084
                           000085   224 _P0_5	=	0x0085
                           000086   225 _P0_6	=	0x0086
                           000087   226 _P0_7	=	0x0087
                           000088   227 _IT0	=	0x0088
                           000089   228 _IE0	=	0x0089
                           00008A   229 _IT1	=	0x008a
                           00008B   230 _IE1	=	0x008b
                           00008C   231 _TR0	=	0x008c
                           00008D   232 _TF0	=	0x008d
                           00008E   233 _TR1	=	0x008e
                           00008F   234 _TF1	=	0x008f
                           000090   235 _P1_0	=	0x0090
                           000091   236 _P1_1	=	0x0091
                           000092   237 _P1_2	=	0x0092
                           000093   238 _P1_3	=	0x0093
                           000094   239 _P1_4	=	0x0094
                           000095   240 _P1_5	=	0x0095
                           000096   241 _P1_6	=	0x0096
                           000097   242 _P1_7	=	0x0097
                           000098   243 _RI	=	0x0098
                           000099   244 _TI	=	0x0099
                           00009A   245 _RB8	=	0x009a
                           00009B   246 _TB8	=	0x009b
                           00009C   247 _REN	=	0x009c
                           00009D   248 _SM2	=	0x009d
                           00009E   249 _SM1	=	0x009e
                           00009F   250 _SM0	=	0x009f
                           0000A0   251 _P2_0	=	0x00a0
                           0000A1   252 _P2_1	=	0x00a1
                           0000A2   253 _P2_2	=	0x00a2
                           0000A3   254 _P2_3	=	0x00a3
                           0000A4   255 _P2_4	=	0x00a4
                           0000A5   256 _P2_5	=	0x00a5
                           0000A6   257 _P2_6	=	0x00a6
                           0000A7   258 _P2_7	=	0x00a7
                           0000A8   259 _EX0	=	0x00a8
                           0000A9   260 _ET0	=	0x00a9
                           0000AA   261 _EX1	=	0x00aa
                           0000AB   262 _ET1	=	0x00ab
                           0000AC   263 _ES	=	0x00ac
                           0000AF   264 _EA	=	0x00af
                           0000B0   265 _P3_0	=	0x00b0
                           0000B1   266 _P3_1	=	0x00b1
                           0000B2   267 _P3_2	=	0x00b2
                           0000B3   268 _P3_3	=	0x00b3
                           0000B4   269 _P3_4	=	0x00b4
                           0000B5   270 _P3_5	=	0x00b5
                           0000B6   271 _P3_6	=	0x00b6
                           0000B7   272 _P3_7	=	0x00b7
                           0000B0   273 _RXD	=	0x00b0
                           0000B1   274 _TXD	=	0x00b1
                           0000B2   275 _INT0	=	0x00b2
                           0000B3   276 _INT1	=	0x00b3
                           0000B4   277 _T0	=	0x00b4
                           0000B5   278 _T1	=	0x00b5
                           0000B6   279 _WR	=	0x00b6
                           0000B7   280 _RD	=	0x00b7
                           0000B8   281 _PX0	=	0x00b8
                           0000B9   282 _PT0	=	0x00b9
                           0000BA   283 _PX1	=	0x00ba
                           0000BB   284 _PT1	=	0x00bb
                           0000BC   285 _PS	=	0x00bc
                           0000D0   286 _P	=	0x00d0
                           0000D1   287 _F1	=	0x00d1
                           0000D2   288 _OV	=	0x00d2
                           0000D3   289 _RS0	=	0x00d3
                           0000D4   290 _RS1	=	0x00d4
                           0000D5   291 _F0	=	0x00d5
                           0000D6   292 _AC	=	0x00d6
                           0000D7   293 _CY	=	0x00d7
                           0000AD   294 _ET2	=	0x00ad
                           0000BD   295 _PT2	=	0x00bd
                           000090   296 _T2	=	0x0090
                           000091   297 _T2EX	=	0x0091
                           0000E8   298 _P4_0	=	0x00e8
                           0000E9   299 _P4_1	=	0x00e9
                           0000EA   300 _P4_2	=	0x00ea
                           0000EB   301 _P4_3	=	0x00eb
                           0000EA   302 _INT3	=	0x00ea
                           0000EB   303 _INT2	=	0x00eb
                           0000C8   304 _CPRL2	=	0x00c8
                           0000C9   305 _T2_CT	=	0x00c9
                           0000CA   306 _TR2	=	0x00ca
                           0000CB   307 _EXEN2	=	0x00cb
                           0000CC   308 _TCLK	=	0x00cc
                           0000CD   309 _RCLK	=	0x00cd
                           0000CE   310 _EXF2	=	0x00ce
                           0000CF   311 _TF2	=	0x00cf
                           0000C0   312 _IT2	=	0x00c0
                           0000C1   313 _IE2	=	0x00c1
                           0000C2   314 _EX2	=	0x00c2
                           0000C3   315 _PX2	=	0x00c3
                           0000C4   316 _IT3	=	0x00c4
                           0000C5   317 _IE3	=	0x00c5
                           0000C6   318 _EX3	=	0x00c6
                           0000C7   319 _PX3	=	0x00c7
                                    320 ;--------------------------------------------------------
                                    321 ; overlayable register banks
                                    322 ;--------------------------------------------------------
                                    323 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        324 	.ds 8
                                    325 ;--------------------------------------------------------
                                    326 ; internal ram data
                                    327 ;--------------------------------------------------------
                                    328 	.area DSEG    (DATA)
                                    329 ;--------------------------------------------------------
                                    330 ; overlayable items in internal ram 
                                    331 ;--------------------------------------------------------
                                    332 	.area	OSEG    (OVR,DATA)
                                    333 	.area	OSEG    (OVR,DATA)
                                    334 	.area	OSEG    (OVR,DATA)
                                    335 	.area	OSEG    (OVR,DATA)
                                    336 	.area	OSEG    (OVR,DATA)
                                    337 	.area	OSEG    (OVR,DATA)
      000000                        338 _TIM2_BAUD_cmd_PARM_2:
      000000                        339 	.ds 1
                                    340 	.area	OSEG    (OVR,DATA)
                                    341 	.area	OSEG    (OVR,DATA)
                                    342 	.area	OSEG    (OVR,DATA)
                                    343 ;--------------------------------------------------------
                                    344 ; indirectly addressable internal ram data
                                    345 ;--------------------------------------------------------
                                    346 	.area ISEG    (DATA)
                                    347 ;--------------------------------------------------------
                                    348 ; absolute internal ram data
                                    349 ;--------------------------------------------------------
                                    350 	.area IABS    (ABS,DATA)
                                    351 	.area IABS    (ABS,DATA)
                                    352 ;--------------------------------------------------------
                                    353 ; bit data
                                    354 ;--------------------------------------------------------
                                    355 	.area BSEG    (BIT)
                                    356 ;--------------------------------------------------------
                                    357 ; paged external ram data
                                    358 ;--------------------------------------------------------
                                    359 	.area PSEG    (PAG,XDATA)
                                    360 ;--------------------------------------------------------
                                    361 ; external ram data
                                    362 ;--------------------------------------------------------
                                    363 	.area XSEG    (XDATA)
                                    364 ;--------------------------------------------------------
                                    365 ; absolute external ram data
                                    366 ;--------------------------------------------------------
                                    367 	.area XABS    (ABS,XDATA)
                                    368 ;--------------------------------------------------------
                                    369 ; external initialized ram data
                                    370 ;--------------------------------------------------------
                                    371 	.area XISEG   (XDATA)
                                    372 	.area HOME    (CODE)
                                    373 	.area GSINIT0 (CODE)
                                    374 	.area GSINIT1 (CODE)
                                    375 	.area GSINIT2 (CODE)
                                    376 	.area GSINIT3 (CODE)
                                    377 	.area GSINIT4 (CODE)
                                    378 	.area GSINIT5 (CODE)
                                    379 	.area GSINIT  (CODE)
                                    380 	.area GSFINAL (CODE)
                                    381 	.area CSEG    (CODE)
                                    382 ;--------------------------------------------------------
                                    383 ; global & static initialisations
                                    384 ;--------------------------------------------------------
                                    385 	.area HOME    (CODE)
                                    386 	.area GSINIT  (CODE)
                                    387 	.area GSFINAL (CODE)
                                    388 	.area GSINIT  (CODE)
                                    389 ;--------------------------------------------------------
                                    390 ; Home
                                    391 ;--------------------------------------------------------
                                    392 	.area HOME    (CODE)
                                    393 	.area HOME    (CODE)
                                    394 ;--------------------------------------------------------
                                    395 ; code
                                    396 ;--------------------------------------------------------
                                    397 	.area CSEG    (CODE)
                                    398 ;------------------------------------------------------------
                                    399 ;Allocation info for local variables in function 'TIM2_calculateValue'
                                    400 ;------------------------------------------------------------
                                    401 ;t                         Allocated to registers r6 r7 
                                    402 ;------------------------------------------------------------
                                    403 ;	../src/tim2.c:26: uint16_t TIM2_calculateValue(uint16_t t)
                                    404 ;	-----------------------------------------
                                    405 ;	 function TIM2_calculateValue
                                    406 ;	-----------------------------------------
      000000                        407 _TIM2_calculateValue:
                           000007   408 	ar7 = 0x07
                           000006   409 	ar6 = 0x06
                           000005   410 	ar5 = 0x05
                           000004   411 	ar4 = 0x04
                           000003   412 	ar3 = 0x03
                           000002   413 	ar2 = 0x02
                           000001   414 	ar1 = 0x01
                           000000   415 	ar0 = 0x00
      000000 AE 82            [24]  416 	mov	r6,dpl
      000002 AF 83            [24]  417 	mov	r7,dph
                                    418 ;	../src/tim2.c:28: if ((t*(MCU_FRE_CLK/1000000)/MCU_PRESCALER) >= TIM2_MAXTICK)
      000004 8E*00            [24]  419 	mov	__mullong_PARM_2,r6
      000006 8F*01            [24]  420 	mov	(__mullong_PARM_2 + 1),r7
      000008 75*02 00         [24]  421 	mov	(__mullong_PARM_2 + 2),#0x00
      00000B 75*03 00         [24]  422 	mov	(__mullong_PARM_2 + 3),#0x00
      00000E 90 00 0C         [24]  423 	mov	dptr,#(0x0c&0x00ff)
      000011 E4               [12]  424 	clr	a
      000012 F5 F0            [12]  425 	mov	b,a
      000014 12r00r00         [24]  426 	lcall	__mullong
      000017 AC 82            [24]  427 	mov	r4,dpl
      000019 AD 83            [24]  428 	mov	r5,dph
      00001B AE F0            [24]  429 	mov	r6,b
      00001D FF               [12]  430 	mov	r7,a
      00001E 75*00 0C         [24]  431 	mov	__divulong_PARM_2,#0x0c
      000021 E4               [12]  432 	clr	a
      000022 F5*01            [12]  433 	mov	(__divulong_PARM_2 + 1),a
      000024 F5*02            [12]  434 	mov	(__divulong_PARM_2 + 2),a
      000026 F5*03            [12]  435 	mov	(__divulong_PARM_2 + 3),a
      000028 8C 82            [24]  436 	mov	dpl,r4
      00002A 8D 83            [24]  437 	mov	dph,r5
      00002C 8E F0            [24]  438 	mov	b,r6
      00002E EF               [12]  439 	mov	a,r7
      00002F 12r00r00         [24]  440 	lcall	__divulong
      000032 AC 82            [24]  441 	mov	r4,dpl
      000034 AD 83            [24]  442 	mov	r5,dph
      000036 AE F0            [24]  443 	mov	r6,b
      000038 FF               [12]  444 	mov	r7,a
      000039 C3               [12]  445 	clr	c
      00003A EC               [12]  446 	mov	a,r4
      00003B 94 FF            [12]  447 	subb	a,#0xff
      00003D ED               [12]  448 	mov	a,r5
      00003E 94 FF            [12]  449 	subb	a,#0xff
      000040 EE               [12]  450 	mov	a,r6
      000041 94 00            [12]  451 	subb	a,#0x00
      000043 EF               [12]  452 	mov	a,r7
      000044 94 00            [12]  453 	subb	a,#0x00
      000046 40 04            [24]  454 	jc	00102$
                                    455 ;	../src/tim2.c:30: return 0;
      000048 90 00 00         [24]  456 	mov	dptr,#0x0000
      00004B 22               [24]  457 	ret
      00004C                        458 00102$:
                                    459 ;	../src/tim2.c:34: return (TIM2_MAXTICK + 1 - (t*(MCU_FRE_CLK/1000000)/MCU_PRESCALER));
      00004C C3               [12]  460 	clr	c
      00004D E4               [12]  461 	clr	a
      00004E 9C               [12]  462 	subb	a,r4
      00004F F5 82            [12]  463 	mov	dpl,a
      000051 E4               [12]  464 	clr	a
      000052 9D               [12]  465 	subb	a,r5
      000053 F5 83            [12]  466 	mov	dph,a
                                    467 ;	../src/tim2.c:36: }
      000055 22               [24]  468 	ret
                                    469 ;------------------------------------------------------------
                                    470 ;Allocation info for local variables in function 'TIM2_clearFlag'
                                    471 ;------------------------------------------------------------
                                    472 ;	../src/tim2.c:48: void TIM2_clearFlag(void)
                                    473 ;	-----------------------------------------
                                    474 ;	 function TIM2_clearFlag
                                    475 ;	-----------------------------------------
      000056                        476 _TIM2_clearFlag:
                                    477 ;	../src/tim2.c:50: TF2 = RESET;
                                    478 ;	assignBit
      000056 C2 CF            [12]  479 	clr	_TF2
                                    480 ;	../src/tim2.c:51: }
      000058 22               [24]  481 	ret
                                    482 ;------------------------------------------------------------
                                    483 ;Allocation info for local variables in function 'TIM2_cmd'
                                    484 ;------------------------------------------------------------
                                    485 ;a                         Allocated to registers r7 
                                    486 ;------------------------------------------------------------
                                    487 ;	../src/tim2.c:63: void TIM2_cmd(Action a)
                                    488 ;	-----------------------------------------
                                    489 ;	 function TIM2_cmd
                                    490 ;	-----------------------------------------
      000059                        491 _TIM2_cmd:
                                    492 ;	../src/tim2.c:65: TR2 = a;
                                    493 ;	assignBit
      000059 E5 82            [12]  494 	mov	a,dpl
      00005B 24 FF            [12]  495 	add	a,#0xff
      00005D 92 CA            [24]  496 	mov	_TR2,c
                                    497 ;	../src/tim2.c:66: }
      00005F 22               [24]  498 	ret
                                    499 ;------------------------------------------------------------
                                    500 ;Allocation info for local variables in function 'TIM2_config'
                                    501 ;------------------------------------------------------------
                                    502 ;t2c                       Allocated to registers r5 r6 r7 
                                    503 ;------------------------------------------------------------
                                    504 ;	../src/tim2.c:78: void TIM2_config(TIM2_configTypeDef *t2c)
                                    505 ;	-----------------------------------------
                                    506 ;	 function TIM2_config
                                    507 ;	-----------------------------------------
      000060                        508 _TIM2_config:
                                    509 ;	../src/tim2.c:80: TIM2_setFunction(t2c->function);
      000060 AD 82            [24]  510 	mov	r5,dpl
      000062 AE 83            [24]  511 	mov	r6,dph
      000064 AF F0            [24]  512 	mov	r7,b
      000066 12r00r00         [24]  513 	lcall	__gptrget
      000069 F5 82            [12]  514 	mov	dpl,a
      00006B C0 07            [24]  515 	push	ar7
      00006D C0 06            [24]  516 	push	ar6
      00006F C0 05            [24]  517 	push	ar5
      000071 12r01r5F         [24]  518 	lcall	_TIM2_setFunction
      000074 D0 05            [24]  519 	pop	ar5
      000076 D0 06            [24]  520 	pop	ar6
      000078 D0 07            [24]  521 	pop	ar7
                                    522 ;	../src/tim2.c:81: TIM2_setMode(t2c->mode);
      00007A 74 03            [12]  523 	mov	a,#0x03
      00007C 2D               [12]  524 	add	a,r5
      00007D FA               [12]  525 	mov	r2,a
      00007E E4               [12]  526 	clr	a
      00007F 3E               [12]  527 	addc	a,r6
      000080 FB               [12]  528 	mov	r3,a
      000081 8F 04            [24]  529 	mov	ar4,r7
      000083 8A 82            [24]  530 	mov	dpl,r2
      000085 8B 83            [24]  531 	mov	dph,r3
      000087 8C F0            [24]  532 	mov	b,r4
      000089 12r00r00         [24]  533 	lcall	__gptrget
      00008C F5 82            [12]  534 	mov	dpl,a
      00008E C0 07            [24]  535 	push	ar7
      000090 C0 06            [24]  536 	push	ar6
      000092 C0 05            [24]  537 	push	ar5
      000094 12r01r69         [24]  538 	lcall	_TIM2_setMode
      000097 D0 05            [24]  539 	pop	ar5
      000099 D0 06            [24]  540 	pop	ar6
      00009B D0 07            [24]  541 	pop	ar7
                                    542 ;	../src/tim2.c:82: TIM2_setReloadValue(t2c->reloadValue);
      00009D 74 06            [12]  543 	mov	a,#0x06
      00009F 2D               [12]  544 	add	a,r5
      0000A0 FA               [12]  545 	mov	r2,a
      0000A1 E4               [12]  546 	clr	a
      0000A2 3E               [12]  547 	addc	a,r6
      0000A3 FB               [12]  548 	mov	r3,a
      0000A4 8F 04            [24]  549 	mov	ar4,r7
      0000A6 8A 82            [24]  550 	mov	dpl,r2
      0000A8 8B 83            [24]  551 	mov	dph,r3
      0000AA 8C F0            [24]  552 	mov	b,r4
      0000AC 12r00r00         [24]  553 	lcall	__gptrget
      0000AF FA               [12]  554 	mov	r2,a
      0000B0 A3               [24]  555 	inc	dptr
      0000B1 12r00r00         [24]  556 	lcall	__gptrget
      0000B4 FB               [12]  557 	mov	r3,a
      0000B5 8A 82            [24]  558 	mov	dpl,r2
      0000B7 8B 83            [24]  559 	mov	dph,r3
      0000B9 C0 07            [24]  560 	push	ar7
      0000BB C0 06            [24]  561 	push	ar6
      0000BD C0 05            [24]  562 	push	ar5
      0000BF 12r01r73         [24]  563 	lcall	_TIM2_setReloadValue
      0000C2 D0 05            [24]  564 	pop	ar5
      0000C4 D0 06            [24]  565 	pop	ar6
      0000C6 D0 07            [24]  566 	pop	ar7
                                    567 ;	../src/tim2.c:83: TIM2_setValue(t2c->value);
      0000C8 74 04            [12]  568 	mov	a,#0x04
      0000CA 2D               [12]  569 	add	a,r5
      0000CB FA               [12]  570 	mov	r2,a
      0000CC E4               [12]  571 	clr	a
      0000CD 3E               [12]  572 	addc	a,r6
      0000CE FB               [12]  573 	mov	r3,a
      0000CF 8F 04            [24]  574 	mov	ar4,r7
      0000D1 8A 82            [24]  575 	mov	dpl,r2
      0000D3 8B 83            [24]  576 	mov	dph,r3
      0000D5 8C F0            [24]  577 	mov	b,r4
      0000D7 12r00r00         [24]  578 	lcall	__gptrget
      0000DA FA               [12]  579 	mov	r2,a
      0000DB A3               [24]  580 	inc	dptr
      0000DC 12r00r00         [24]  581 	lcall	__gptrget
      0000DF FB               [12]  582 	mov	r3,a
      0000E0 8A 82            [24]  583 	mov	dpl,r2
      0000E2 8B 83            [24]  584 	mov	dph,r3
      0000E4 C0 07            [24]  585 	push	ar7
      0000E6 C0 06            [24]  586 	push	ar6
      0000E8 C0 05            [24]  587 	push	ar5
      0000EA 12r01r7C         [24]  588 	lcall	_TIM2_setValue
      0000ED D0 05            [24]  589 	pop	ar5
      0000EF D0 06            [24]  590 	pop	ar6
      0000F1 D0 07            [24]  591 	pop	ar7
                                    592 ;	../src/tim2.c:84: TIM2_INT_cmd(t2c->interruptState);
      0000F3 74 01            [12]  593 	mov	a,#0x01
      0000F5 2D               [12]  594 	add	a,r5
      0000F6 FA               [12]  595 	mov	r2,a
      0000F7 E4               [12]  596 	clr	a
      0000F8 3E               [12]  597 	addc	a,r6
      0000F9 FB               [12]  598 	mov	r3,a
      0000FA 8F 04            [24]  599 	mov	ar4,r7
      0000FC 8A 82            [24]  600 	mov	dpl,r2
      0000FE 8B 83            [24]  601 	mov	dph,r3
      000100 8C F0            [24]  602 	mov	b,r4
      000102 12r00r00         [24]  603 	lcall	__gptrget
      000105 F5 82            [12]  604 	mov	dpl,a
      000107 C0 07            [24]  605 	push	ar7
      000109 C0 06            [24]  606 	push	ar6
      00010B C0 05            [24]  607 	push	ar5
      00010D 12r01r9C         [24]  608 	lcall	_TIM2_INT_cmd
      000110 D0 05            [24]  609 	pop	ar5
      000112 D0 06            [24]  610 	pop	ar6
      000114 D0 07            [24]  611 	pop	ar7
                                    612 ;	../src/tim2.c:85: TIM2_INT_setPriority(t2c->interruptPriority);
      000116 74 02            [12]  613 	mov	a,#0x02
      000118 2D               [12]  614 	add	a,r5
      000119 FD               [12]  615 	mov	r5,a
      00011A E4               [12]  616 	clr	a
      00011B 3E               [12]  617 	addc	a,r6
      00011C FE               [12]  618 	mov	r6,a
      00011D 8D 82            [24]  619 	mov	dpl,r5
      00011F 8E 83            [24]  620 	mov	dph,r6
      000121 8F F0            [24]  621 	mov	b,r7
      000123 12r00r00         [24]  622 	lcall	__gptrget
      000126 F5 82            [12]  623 	mov	dpl,a
                                    624 ;	../src/tim2.c:86: }
      000128 02r01rA3         [24]  625 	ljmp	_TIM2_INT_setPriority
                                    626 ;------------------------------------------------------------
                                    627 ;Allocation info for local variables in function 'TIM2_getCaptureValue'
                                    628 ;------------------------------------------------------------
                                    629 ;	../src/tim2.c:98: uint16_t TIM2_getCaptureValue(void)
                                    630 ;	-----------------------------------------
                                    631 ;	 function TIM2_getCaptureValue
                                    632 ;	-----------------------------------------
      00012B                        633 _TIM2_getCaptureValue:
                                    634 ;	../src/tim2.c:100: return (uint16_t)((RCAP2H << 0x8) | RCAP2L);
      00012B AF CB            [24]  635 	mov	r7,_RCAP2H
      00012D 7E 00            [12]  636 	mov	r6,#0x00
      00012F AC CA            [24]  637 	mov	r4,_RCAP2L
      000131 7D 00            [12]  638 	mov	r5,#0x00
      000133 EC               [12]  639 	mov	a,r4
      000134 42 06            [12]  640 	orl	ar6,a
      000136 ED               [12]  641 	mov	a,r5
      000137 42 07            [12]  642 	orl	ar7,a
      000139 8E 82            [24]  643 	mov	dpl,r6
      00013B 8F 83            [24]  644 	mov	dph,r7
                                    645 ;	../src/tim2.c:101: }
      00013D 22               [24]  646 	ret
                                    647 ;------------------------------------------------------------
                                    648 ;Allocation info for local variables in function 'TIM2_getValue'
                                    649 ;------------------------------------------------------------
                                    650 ;	../src/tim2.c:113: uint16_t TIM2_getValue(void)
                                    651 ;	-----------------------------------------
                                    652 ;	 function TIM2_getValue
                                    653 ;	-----------------------------------------
      00013E                        654 _TIM2_getValue:
                                    655 ;	../src/tim2.c:115: return (uint16_t)((TH2 << 0x8) | TL2);
      00013E AF CD            [24]  656 	mov	r7,_TH2
      000140 7E 00            [12]  657 	mov	r6,#0x00
      000142 AC CC            [24]  658 	mov	r4,_TL2
      000144 7D 00            [12]  659 	mov	r5,#0x00
      000146 EC               [12]  660 	mov	a,r4
      000147 42 06            [12]  661 	orl	ar6,a
      000149 ED               [12]  662 	mov	a,r5
      00014A 42 07            [12]  663 	orl	ar7,a
      00014C 8E 82            [24]  664 	mov	dpl,r6
      00014E 8F 83            [24]  665 	mov	dph,r7
                                    666 ;	../src/tim2.c:116: }
      000150 22               [24]  667 	ret
                                    668 ;------------------------------------------------------------
                                    669 ;Allocation info for local variables in function 'TIM2_isExternalEvent'
                                    670 ;------------------------------------------------------------
                                    671 ;	../src/tim2.c:128: bool TIM2_isExternalEvent(void)
                                    672 ;	-----------------------------------------
                                    673 ;	 function TIM2_isExternalEvent
                                    674 ;	-----------------------------------------
      000151                        675 _TIM2_isExternalEvent:
                                    676 ;	../src/tim2.c:130: return (bool)T2EX;
      000151 A2 91            [12]  677 	mov	c,_T2EX
      000153 E4               [12]  678 	clr	a
      000154 33               [12]  679 	rlc	a
      000155 F5 82            [12]  680 	mov	dpl,a
                                    681 ;	../src/tim2.c:131: }
      000157 22               [24]  682 	ret
                                    683 ;------------------------------------------------------------
                                    684 ;Allocation info for local variables in function 'TIM2_isOverflow'
                                    685 ;------------------------------------------------------------
                                    686 ;	../src/tim2.c:144: bool TIM2_isOverflow(void)
                                    687 ;	-----------------------------------------
                                    688 ;	 function TIM2_isOverflow
                                    689 ;	-----------------------------------------
      000158                        690 _TIM2_isOverflow:
                                    691 ;	../src/tim2.c:146: return (bool)(TF2);
      000158 A2 CF            [12]  692 	mov	c,_TF2
      00015A E4               [12]  693 	clr	a
      00015B 33               [12]  694 	rlc	a
      00015C F5 82            [12]  695 	mov	dpl,a
                                    696 ;	../src/tim2.c:147: }
      00015E 22               [24]  697 	ret
                                    698 ;------------------------------------------------------------
                                    699 ;Allocation info for local variables in function 'TIM2_setFunction'
                                    700 ;------------------------------------------------------------
                                    701 ;f                         Allocated to registers r7 
                                    702 ;------------------------------------------------------------
                                    703 ;	../src/tim2.c:159: void TIM2_setFunction(TIM2_function f)
                                    704 ;	-----------------------------------------
                                    705 ;	 function TIM2_setFunction
                                    706 ;	-----------------------------------------
      00015F                        707 _TIM2_setFunction:
      00015F AF 82            [24]  708 	mov	r7,dpl
                                    709 ;	../src/tim2.c:161: T2CON = (T2CON & 0XCF) | f;
      000161 E5 C8            [12]  710 	mov	a,_T2CON
      000163 54 CF            [12]  711 	anl	a,#0xcf
      000165 4F               [12]  712 	orl	a,r7
      000166 F5 C8            [12]  713 	mov	_T2CON,a
                                    714 ;	../src/tim2.c:162: }
      000168 22               [24]  715 	ret
                                    716 ;------------------------------------------------------------
                                    717 ;Allocation info for local variables in function 'TIM2_setMode'
                                    718 ;------------------------------------------------------------
                                    719 ;mode                      Allocated to registers r7 
                                    720 ;------------------------------------------------------------
                                    721 ;	../src/tim2.c:174: void TIM2_setMode(TIM2_mode mode)
                                    722 ;	-----------------------------------------
                                    723 ;	 function TIM2_setMode
                                    724 ;	-----------------------------------------
      000169                        725 _TIM2_setMode:
      000169 AF 82            [24]  726 	mov	r7,dpl
                                    727 ;	../src/tim2.c:176: T2CON = (T2CON & 0xCE) | mode;
      00016B E5 C8            [12]  728 	mov	a,_T2CON
      00016D 54 CE            [12]  729 	anl	a,#0xce
      00016F 4F               [12]  730 	orl	a,r7
      000170 F5 C8            [12]  731 	mov	_T2CON,a
                                    732 ;	../src/tim2.c:177: }
      000172 22               [24]  733 	ret
                                    734 ;------------------------------------------------------------
                                    735 ;Allocation info for local variables in function 'TIM2_setReloadValue'
                                    736 ;------------------------------------------------------------
                                    737 ;val                       Allocated to registers r6 r7 
                                    738 ;------------------------------------------------------------
                                    739 ;	../src/tim2.c:189: void TIM2_setReloadValue(uint16_t val)
                                    740 ;	-----------------------------------------
                                    741 ;	 function TIM2_setReloadValue
                                    742 ;	-----------------------------------------
      000173                        743 _TIM2_setReloadValue:
      000173 AE 82            [24]  744 	mov	r6,dpl
      000175 AF 83            [24]  745 	mov	r7,dph
                                    746 ;	../src/tim2.c:191: RCAP2H = (byte)(val >> 0x8);
      000177 8F CB            [24]  747 	mov	_RCAP2H,r7
                                    748 ;	../src/tim2.c:192: RCAP2L = val;
      000179 8E CA            [24]  749 	mov	_RCAP2L,r6
                                    750 ;	../src/tim2.c:193: }
      00017B 22               [24]  751 	ret
                                    752 ;------------------------------------------------------------
                                    753 ;Allocation info for local variables in function 'TIM2_setValue'
                                    754 ;------------------------------------------------------------
                                    755 ;val                       Allocated to registers r6 r7 
                                    756 ;------------------------------------------------------------
                                    757 ;	../src/tim2.c:205: void TIM2_setValue(uint16_t val)
                                    758 ;	-----------------------------------------
                                    759 ;	 function TIM2_setValue
                                    760 ;	-----------------------------------------
      00017C                        761 _TIM2_setValue:
      00017C AE 82            [24]  762 	mov	r6,dpl
      00017E AF 83            [24]  763 	mov	r7,dph
                                    764 ;	../src/tim2.c:207: TH2 = (val >> 0x8);
      000180 8F CD            [24]  765 	mov	_TH2,r7
                                    766 ;	../src/tim2.c:208: TL2 = val;
      000182 8E CC            [24]  767 	mov	_TL2,r6
                                    768 ;	../src/tim2.c:209: }
      000184 22               [24]  769 	ret
                                    770 ;------------------------------------------------------------
                                    771 ;Allocation info for local variables in function 'TIM2_BAUD_cmd'
                                    772 ;------------------------------------------------------------
                                    773 ;a                         Allocated with name '_TIM2_BAUD_cmd_PARM_2'
                                    774 ;t                         Allocated to registers r7 
                                    775 ;------------------------------------------------------------
                                    776 ;	../src/tim2.c:223: void TIM2_BAUD_cmd(TIM2_baudClock t, Action a)
                                    777 ;	-----------------------------------------
                                    778 ;	 function TIM2_BAUD_cmd
                                    779 ;	-----------------------------------------
      000185                        780 _TIM2_BAUD_cmd:
                                    781 ;	../src/tim2.c:225: if (t & TIM2_baudClock_receive)
      000185 E5 82            [12]  782 	mov	a,dpl
      000187 FF               [12]  783 	mov	r7,a
      000188 30 E0 06         [24]  784 	jnb	acc.0,00102$
                                    785 ;	../src/tim2.c:227: RCLK = (FunctionalState)a;
                                    786 ;	assignBit
      00018B E5*00            [12]  787 	mov	a,_TIM2_BAUD_cmd_PARM_2
      00018D 24 FF            [12]  788 	add	a,#0xff
      00018F 92 CD            [24]  789 	mov	_RCLK,c
      000191                        790 00102$:
                                    791 ;	../src/tim2.c:229: if (t & TIM2_baudClock_transmit)
      000191 EF               [12]  792 	mov	a,r7
      000192 30 E1 06         [24]  793 	jnb	acc.1,00105$
                                    794 ;	../src/tim2.c:231: TCLK = (FunctionalState)a;
                                    795 ;	assignBit
      000195 E5*00            [12]  796 	mov	a,_TIM2_BAUD_cmd_PARM_2
      000197 24 FF            [12]  797 	add	a,#0xff
      000199 92 CC            [24]  798 	mov	_TCLK,c
      00019B                        799 00105$:
                                    800 ;	../src/tim2.c:233: }
      00019B 22               [24]  801 	ret
                                    802 ;------------------------------------------------------------
                                    803 ;Allocation info for local variables in function 'TIM2_INT_cmd'
                                    804 ;------------------------------------------------------------
                                    805 ;a                         Allocated to registers r7 
                                    806 ;------------------------------------------------------------
                                    807 ;	../src/tim2.c:245: void TIM2_INT_cmd(Action a)
                                    808 ;	-----------------------------------------
                                    809 ;	 function TIM2_INT_cmd
                                    810 ;	-----------------------------------------
      00019C                        811 _TIM2_INT_cmd:
                                    812 ;	../src/tim2.c:247: ET2 = a;
                                    813 ;	assignBit
      00019C E5 82            [12]  814 	mov	a,dpl
      00019E 24 FF            [12]  815 	add	a,#0xff
      0001A0 92 AD            [24]  816 	mov	_ET2,c
                                    817 ;	../src/tim2.c:248: }
      0001A2 22               [24]  818 	ret
                                    819 ;------------------------------------------------------------
                                    820 ;Allocation info for local variables in function 'TIM2_INT_setPriority'
                                    821 ;------------------------------------------------------------
                                    822 ;p                         Allocated to registers r7 
                                    823 ;------------------------------------------------------------
                                    824 ;	../src/tim2.c:260: void TIM2_INT_setPriority(UTIL_interruptPriority p)
                                    825 ;	-----------------------------------------
                                    826 ;	 function TIM2_INT_setPriority
                                    827 ;	-----------------------------------------
      0001A3                        828 _TIM2_INT_setPriority:
                                    829 ;	../src/tim2.c:262: PT2 = TESTB(p,1);
      0001A3 E5 82            [12]  830 	mov	a,dpl
      0001A5 03               [12]  831 	rr	a
      0001A6 54 01            [12]  832 	anl	a,#0x01
      0001A8 B4 01 00         [24]  833 	cjne	a,#0x01,00103$
      0001AB                        834 00103$:
      0001AB B3               [12]  835 	cpl	c
      0001AC E4               [12]  836 	clr	a
      0001AD 33               [12]  837 	rlc	a
      0001AE FF               [12]  838 	mov	r7,a
      0001AF 24 FF            [12]  839 	add	a,#0xff
      0001B1 92 BD            [24]  840 	mov	_PT2,c
                                    841 ;	../src/tim2.c:263: CONFB(IPH, BIT_NUM_PT2H, TESTB(p, 1));
      0001B3 74 DF            [12]  842 	mov	a,#0xdf
      0001B5 55 B7            [12]  843 	anl	a,_IPH
      0001B7 FE               [12]  844 	mov	r6,a
      0001B8 EF               [12]  845 	mov	a,r7
      0001B9 C4               [12]  846 	swap	a
      0001BA 23               [12]  847 	rl	a
      0001BB 54 E0            [12]  848 	anl	a,#0xe0
      0001BD 4E               [12]  849 	orl	a,r6
      0001BE F5 B7            [12]  850 	mov	_IPH,a
                                    851 ;	../src/tim2.c:264: }
      0001C0 22               [24]  852 	ret
                                    853 ;------------------------------------------------------------
                                    854 ;Allocation info for local variables in function 'TIM2_T2EX_cmd'
                                    855 ;------------------------------------------------------------
                                    856 ;a                         Allocated to registers r7 
                                    857 ;------------------------------------------------------------
                                    858 ;	../src/tim2.c:279: void TIM2_T2EX_cmd(Action a)
                                    859 ;	-----------------------------------------
                                    860 ;	 function TIM2_T2EX_cmd
                                    861 ;	-----------------------------------------
      0001C1                        862 _TIM2_T2EX_cmd:
                                    863 ;	../src/tim2.c:281: EXEN2 = a;
                                    864 ;	assignBit
      0001C1 E5 82            [12]  865 	mov	a,dpl
      0001C3 24 FF            [12]  866 	add	a,#0xff
      0001C5 92 CB            [24]  867 	mov	_EXEN2,c
                                    868 ;	../src/tim2.c:282: }
      0001C7 22               [24]  869 	ret
                                    870 	.area CSEG    (CODE)
                                    871 	.area CONST   (CODE)
                                    872 	.area XINIT   (CODE)
                                    873 	.area CABS    (ABS,CODE)
